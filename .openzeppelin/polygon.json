{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x7eAd9599cCB9787491282073d320dFE3D92583f7",
    "txHash": "0xc205e99f1acbca0f7d6587396626deb68b7af8af6ad9d20ca19b5eb7b030ecf5"
  },
  "proxies": [
    {
      "address": "0x7762Fe026EB2Be462Ef5f6779D02E562c8014896",
      "txHash": "0xe615ed6e854885353136733d5adaea90f2265c0329a1174e952b604ca2fd95c2",
      "kind": "transparent"
    },
    {
      "address": "0x5B421eCb68011407de13e2F9152D1f4e31188E2a",
      "txHash": "0x18c11f225eafb1dee8f874e3fd6428b853c2fe6569fc5371758b13d92fed56ae",
      "kind": "transparent"
    },
    {
      "address": "0x072504637C022376eCD8904E92d6bB5B00Ca4172",
      "txHash": "0x0ba7517358dd976ab49acde23eb77e8e21bce429bfd1066c0b5b57da0b6e63b9",
      "kind": "transparent"
    },
    {
      "address": "0xAe44c8213322C7ea24e9B5d8c71A831bb5843B0c",
      "txHash": "0x2dfd1ac5bb871b30263a95758c29438400e7b444f4b77fcf2ec17e8f2ac20e7a",
      "kind": "transparent"
    },
    {
      "address": "0xB223211bF9Abb0AC8a604EE8946542eBc9972552",
      "txHash": "0x879d02e97ba425591f632b78b231ed81fe6ae36d8c4d4b271d8c87bd31c1d590",
      "kind": "transparent"
    },
    {
      "address": "0x36B2B0Ca0a6dC91B15Ff3605369F5047BE0C8D83",
      "txHash": "0x97514d52011f860a61b9f6756bf429de5fd2e82815c26a7936e447601eec3f2e",
      "kind": "transparent"
    },
    {
      "address": "0x3D9e6bD43aC6afc78f3D8C8df6811D9aB53678c1",
      "txHash": "0x255e1afda8c67953c2759b7c8e6f11b543b5d0363877b1251e154c3ea0793f60",
      "kind": "transparent"
    },
    {
      "address": "0x13b02f35bF9a69ab2D26b7F229ecca3327b5BB53",
      "txHash": "0x3ef0201e9fdb1d0c5a616eedf9d2e74762b56c0002e212e85203d38c0e446912",
      "kind": "transparent"
    },
    {
      "address": "0x36C729Ac4612F0CF156004D683Cf380936BC0953",
      "txHash": "0xf6cb3d101c6ccb72a02cc2a95ddd8d0beb9bbf9aa20cfa8eeaa924cfdfdd4bd5",
      "kind": "transparent"
    },
    {
      "address": "0xCF6d770210C1efcf9E9Ad7584ECFCD47214F0406",
      "txHash": "0x5de276d7ea9226f9aad9ee7177ceaee7ad5f69093eb8ea4de2b2d3175842b49c",
      "kind": "transparent"
    },
    {
      "address": "0x2adbd742D648623349771c6364d72258E87450F1",
      "txHash": "0xd23a791df15b1e3b0e801fbb83432e112cdadbfbc8984b9e017d0ec68869b5d6",
      "kind": "transparent"
    },
    {
      "address": "0x094A3B77fE25bc8De4F6e679e61A00c1e1529e25",
      "txHash": "0x1a77e97d7ba26eb22518f24763f67e886759656651cfb7ab6d7c31a1abf5ccaa",
      "kind": "transparent"
    },
    {
      "address": "0x24c6f0C81Cc8E6fc9348Fb3ab5338F903A5B7959",
      "kind": "transparent"
    },
    {
      "address": "0x3f4A8705C965Ef1BE0B4C1d2731Cd8782AAAc1b8",
      "txHash": "0xc1570294b4912ced2cab7e15b960b57cdbee46b8cc47e9657424730d2551811b",
      "kind": "transparent"
    }
  ],
  "impls": {
    "60ba026c62dc8e607fc4d5336d1a147b00c4ba70433a3c3f48c50b41212b7ea7": {
      "address": "0xa0544C3f312891C329E1a09e5cBbA47F71e1B54c",
      "txHash": "0x98ab1f0d9c465d92d2a02f86110b7e9147fe75e3e12eaa2da690e6080fad6c51",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_arenaAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IArena)5671",
            "contract": "Card",
            "src": "contracts/Card.sol:23"
          },
          {
            "label": "_lastMint",
            "offset": 0,
            "slot": "252",
            "type": "t_struct(Counter)3142_storage",
            "contract": "Card",
            "src": "contracts/Card.sol:24"
          },
          {
            "label": "_acceptedCurrency",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IERC20Upgradeable)1384",
            "contract": "Card",
            "src": "contracts/Card.sol:25"
          },
          {
            "label": "_prices",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_enum(CardRarity)5682,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:26"
          },
          {
            "label": "_upgradePrices",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_enum(CardRarity)5682,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:27"
          },
          {
            "label": "_rarities",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_enum(CardRarity)5682)",
            "contract": "Card",
            "src": "contracts/Card.sol:28"
          },
          {
            "label": "_mintAllowances",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_enum(CardRarity)5682)",
            "contract": "Card",
            "src": "contracts/Card.sol:29"
          },
          {
            "label": "_livesRemaining",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:38"
          },
          {
            "label": "_lastBetsPerformance",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:49"
          },
          {
            "label": "_maintoken",
            "offset": 0,
            "slot": "260",
            "type": "t_contract(MainToken)5768",
            "contract": "Card",
            "src": "contracts/Card.sol:50"
          },
          {
            "label": "_auctionAddress",
            "offset": 0,
            "slot": "261",
            "type": "t_address",
            "contract": "Card",
            "src": "contracts/Card.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IArena)5671": {
            "label": "contract IArena",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1384": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)5768": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)5682": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_enum(CardRarity)5682)": {
            "label": "mapping(address => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(CardRarity)5682,t_uint256)": {
            "label": "mapping(enum ICard.CardRarity => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(CardRarity)5682)": {
            "label": "mapping(uint256 => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3142_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9151d8a2a993bffa0d951601b2fd9b1ac690f0242d86b01e3fea118d97a4f0a0": {
      "address": "0x300360FF2a46c90090134e0dEF1471ced315518e",
      "txHash": "0xf10cbd71619fb843641a89638e391ff87fc2cd633dc325858f187134da6bb95c",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "card",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ICard)3505",
            "contract": "Arena",
            "src": "contracts/Arena.sol:37"
          },
          {
            "label": "eventInfos",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(EventInfo)2112_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:38"
          },
          {
            "label": "bets",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_struct(BetInfo)2120_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:39"
          },
          {
            "label": "betsByUser",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:40"
          },
          {
            "label": "rarities",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)3475)dyn_storage))",
            "contract": "Arena",
            "src": "contracts/Arena.sol:41"
          },
          {
            "label": "maintoken",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(MainToken)3561",
            "contract": "Arena",
            "src": "contracts/Arena.sol:42"
          },
          {
            "label": "calls",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_struct(CallInfo)2134_storage)dyn_storage",
            "contract": "Arena",
            "src": "contracts/Arena.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_enum(CardRarity)3475)dyn_storage": {
            "label": "enum ICard.CardRarity[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(CallInfo)2134_storage)dyn_storage": {
            "label": "struct Arena.CallInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICard)3505": {
            "label": "contract ICard",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)3561": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)3475": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(MatchResult)3405": {
            "label": "enum IArena.MatchResult",
            "members": [
              "MatchIsInProgress",
              "MatchCancelled",
              "FirstWon",
              "Draw",
              "SecondWon"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)3475)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => enum ICard.CardRarity[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_enum(CardRarity)3475)dyn_storage)": {
            "label": "mapping(uint256 => enum ICard.CardRarity[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BetInfo)2120_storage)": {
            "label": "mapping(uint256 => struct Arena.BetInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(EventInfo)2112_storage)": {
            "label": "mapping(uint256 => struct Arena.EventInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(BetInfo)2120_storage": {
            "label": "struct Arena.BetInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)3405",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cardOwner",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(CallInfo)2134_storage": {
            "label": "struct Arena.CallInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)3405",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "firstParticipantAddress",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "firstParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "secondParticipantAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "secondParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(EventInfo)2112_storage": {
            "label": "struct Arena.EventInfo",
            "members": [
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "descriptionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "result",
                "type": "t_enum(MatchResult)3405",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f68abb194ef3fdf25984f1771066f9d7e3aeb5825ee66c26692182d4be077be6": {
      "address": "0xE02B781610f9D4A9835ED8d4C387e6b5eAc09Aa5",
      "txHash": "0x8cd5af507c1f034678d330487d39bcc3af51d8a6639a8d818e09db5753278cdf",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "de01d922cfcb96cc7190b843a1fdf1de605a0c98e63af38ad7a7ed0211b9bcd0": {
      "address": "0x4Ec2288B68e9a6d2E1Fa4600595CF2E21c7cC5bf",
      "txHash": "0xe9a2c8ee42f2df5624adb33ceeaec5807284a641f633ab32cfab38b13835b3cc",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "bets",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_struct(AuctionInfo)3521_storage)",
            "contract": "Auction",
            "src": "contracts/Auction.sol:24"
          },
          {
            "label": "auctionsByUser",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Auction",
            "src": "contracts/Auction.sol:25"
          },
          {
            "label": "card",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(Card)5604",
            "contract": "Auction",
            "src": "contracts/Auction.sol:26"
          },
          {
            "label": "maintoken",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(MainToken)5768",
            "contract": "Auction",
            "src": "contracts/Auction.sol:27"
          },
          {
            "label": "myBets",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_array(t_struct(MyBet)3528_storage)dyn_storage)",
            "contract": "Auction",
            "src": "contracts/Auction.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(MyBet)3528_storage)dyn_storage": {
            "label": "struct Auction.MyBet[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Card)5604": {
            "label": "contract Card",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)5768": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(MyBet)3528_storage)dyn_storage)": {
            "label": "mapping(address => struct Auction.MyBet[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AuctionInfo)3521_storage)": {
            "label": "mapping(uint256 => struct Auction.AuctionInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(AuctionInfo)3521_storage": {
            "label": "struct Auction.AuctionInfo",
            "members": [
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bestBet",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "bestBettor",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(MyBet)3528_storage": {
            "label": "struct Auction.MyBet",
            "members": [
              {
                "label": "cardId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d821eb8ec1afe3ba3811bec3d3c4b1d9101b6ebc3d6f5ff4e288ccc0eada3bd6": {
      "address": "0x11A60E2A61ccA86440a33b68e91d2290D2b86595",
      "txHash": "0x2049cf4ff2fff563ae02ebff77e8eaec5d9777300bc9789e3ecfb3757651aef3",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c58e6722186652e597276333fbd524910413348889d9f14293c5751e2766a93e": {
      "address": "0x8F6b5186af8d30621c99a2436E42551dA8D55D39",
      "txHash": "0x46a77b375daf4fd052dd42f95e486a256960cc82ad0c16a5caa9bb0e833adbab",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_arenaAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IArena)5788",
            "contract": "Card",
            "src": "contracts/Card.sol:23"
          },
          {
            "label": "_lastMint",
            "offset": 0,
            "slot": "252",
            "type": "t_struct(Counter)3142_storage",
            "contract": "Card",
            "src": "contracts/Card.sol:24"
          },
          {
            "label": "_acceptedCurrency",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IERC20Upgradeable)1384",
            "contract": "Card",
            "src": "contracts/Card.sol:25"
          },
          {
            "label": "_prices",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_enum(CardRarity)5799,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:26"
          },
          {
            "label": "_upgradePrices",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_enum(CardRarity)5799,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:27"
          },
          {
            "label": "_rarities",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_enum(CardRarity)5799)",
            "contract": "Card",
            "src": "contracts/Card.sol:28"
          },
          {
            "label": "_mintAllowances",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_enum(CardRarity)5799)",
            "contract": "Card",
            "src": "contracts/Card.sol:29"
          },
          {
            "label": "_livesRemaining",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:38"
          },
          {
            "label": "_lastBetsPerformance",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:49"
          },
          {
            "label": "_maintoken",
            "offset": 0,
            "slot": "260",
            "type": "t_contract(MainToken)5885",
            "contract": "Card",
            "src": "contracts/Card.sol:50"
          },
          {
            "label": "_auctionAddress",
            "offset": 0,
            "slot": "261",
            "type": "t_address",
            "contract": "Card",
            "src": "contracts/Card.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IArena)5788": {
            "label": "contract IArena",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1384": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)5885": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)5799": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_enum(CardRarity)5799)": {
            "label": "mapping(address => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(CardRarity)5799,t_uint256)": {
            "label": "mapping(enum ICard.CardRarity => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(CardRarity)5799)": {
            "label": "mapping(uint256 => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3142_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "78eb2a05fb580d7fafe48e1c18c932e692851cf0ce02533d721bf83941ffb08e": {
      "address": "0xCfFD9Bb65E361A68F3D09F192F6306589435De00",
      "txHash": "0x41f7377b49402a12ea3bdf13b2905f4842f8a0cbe5c28bc89879c2bb21589e0e",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_arenaAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IArena)5714",
            "contract": "Card",
            "src": "contracts/Card.sol:23"
          },
          {
            "label": "_lastMint",
            "offset": 0,
            "slot": "252",
            "type": "t_struct(Counter)3142_storage",
            "contract": "Card",
            "src": "contracts/Card.sol:24"
          },
          {
            "label": "_acceptedCurrency",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IERC20Upgradeable)1384",
            "contract": "Card",
            "src": "contracts/Card.sol:25"
          },
          {
            "label": "_prices",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_enum(CardRarity)5725,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:26"
          },
          {
            "label": "_upgradePrices",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_enum(CardRarity)5725,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:27"
          },
          {
            "label": "_rarities",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_enum(CardRarity)5725)",
            "contract": "Card",
            "src": "contracts/Card.sol:28"
          },
          {
            "label": "_mintAllowances",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_enum(CardRarity)5725)",
            "contract": "Card",
            "src": "contracts/Card.sol:29"
          },
          {
            "label": "_livesRemaining",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:38"
          },
          {
            "label": "_lastBetsPerformance",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:49"
          },
          {
            "label": "_maintoken",
            "offset": 0,
            "slot": "260",
            "type": "t_contract(MainToken)5811",
            "contract": "Card",
            "src": "contracts/Card.sol:50"
          },
          {
            "label": "_auctionAddress",
            "offset": 0,
            "slot": "261",
            "type": "t_address",
            "contract": "Card",
            "src": "contracts/Card.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IArena)5714": {
            "label": "contract IArena",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1384": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)5811": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)5725": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_enum(CardRarity)5725)": {
            "label": "mapping(address => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(CardRarity)5725,t_uint256)": {
            "label": "mapping(enum ICard.CardRarity => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(CardRarity)5725)": {
            "label": "mapping(uint256 => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3142_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "fd38156d8b9a0338f3fd81502969dd465b7e0cddf729ec30f936132b9c6473b8": {
      "address": "0x6BEfF2EDe8c498855475adf520a3f3C1A5B305Ec",
      "txHash": "0x7405ea4594f4cc4e1b1828604f385d0eed8d7780af75a77a4cc7060ad084504e",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_arenaAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IArena)5726",
            "contract": "Card",
            "src": "contracts/Card.sol:23"
          },
          {
            "label": "_lastMint",
            "offset": 0,
            "slot": "252",
            "type": "t_struct(Counter)3142_storage",
            "contract": "Card",
            "src": "contracts/Card.sol:24"
          },
          {
            "label": "_acceptedCurrency",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IERC20Upgradeable)1384",
            "contract": "Card",
            "src": "contracts/Card.sol:25"
          },
          {
            "label": "_prices",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_enum(CardRarity)5737,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:26"
          },
          {
            "label": "_upgradePrices",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_enum(CardRarity)5737,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:27"
          },
          {
            "label": "_rarities",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_enum(CardRarity)5737)",
            "contract": "Card",
            "src": "contracts/Card.sol:28"
          },
          {
            "label": "_mintAllowances",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_enum(CardRarity)5737)",
            "contract": "Card",
            "src": "contracts/Card.sol:29"
          },
          {
            "label": "_livesRemaining",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:38"
          },
          {
            "label": "_lastBetsPerformance",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:49"
          },
          {
            "label": "_maintoken",
            "offset": 0,
            "slot": "260",
            "type": "t_contract(MainToken)5823",
            "contract": "Card",
            "src": "contracts/Card.sol:50"
          },
          {
            "label": "_auctionAddress",
            "offset": 0,
            "slot": "261",
            "type": "t_address",
            "contract": "Card",
            "src": "contracts/Card.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IArena)5726": {
            "label": "contract IArena",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1384": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)5823": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)5737": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_enum(CardRarity)5737)": {
            "label": "mapping(address => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(CardRarity)5737,t_uint256)": {
            "label": "mapping(enum ICard.CardRarity => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(CardRarity)5737)": {
            "label": "mapping(uint256 => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3142_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9b04138eb11dae8e87bc1ecb4e2bfeff622a80da11ddd7e6c7a0accff8f03255": {
      "address": "0xD91b4A26398E2B6F3b68202f511F65f9e19BDD50",
      "txHash": "0xd80e55a9d16d20df6dc8ce7505d14993cafba0c392fb476d07648afad6a55c1c",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_arenaAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IArena)4846",
            "contract": "Card",
            "src": "contracts/Card.sol:23"
          },
          {
            "label": "_lastMint",
            "offset": 0,
            "slot": "252",
            "type": "t_struct(Counter)3010_storage",
            "contract": "Card",
            "src": "contracts/Card.sol:24"
          },
          {
            "label": "_acceptedCurrency",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IERC20Upgradeable)1252",
            "contract": "Card",
            "src": "contracts/Card.sol:25"
          },
          {
            "label": "_prices",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_enum(CardRarity)4857,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:26"
          },
          {
            "label": "_upgradePrices",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_enum(CardRarity)4857,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:27"
          },
          {
            "label": "_rarities",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_enum(CardRarity)4857)",
            "contract": "Card",
            "src": "contracts/Card.sol:28"
          },
          {
            "label": "_mintAllowances",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_enum(CardRarity)4857)",
            "contract": "Card",
            "src": "contracts/Card.sol:29"
          },
          {
            "label": "_livesRemaining",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:38"
          },
          {
            "label": "_lastBetsPerformance",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:49"
          },
          {
            "label": "_maintoken",
            "offset": 0,
            "slot": "260",
            "type": "t_contract(MainToken)4943",
            "contract": "Card",
            "src": "contracts/Card.sol:50"
          },
          {
            "label": "_auctionAddress",
            "offset": 0,
            "slot": "261",
            "type": "t_address",
            "contract": "Card",
            "src": "contracts/Card.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IArena)4846": {
            "label": "contract IArena",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1252": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)4943": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)4857": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_enum(CardRarity)4857)": {
            "label": "mapping(address => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(CardRarity)4857,t_uint256)": {
            "label": "mapping(enum ICard.CardRarity => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(CardRarity)4857)": {
            "label": "mapping(uint256 => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3010_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b557fc50f39ed4374a84ab5a4ee55a8a7267f3964045dbfa3133083edd05b4ce": {
      "address": "0xFe4F3350D106A71Aa12fD3c674412e8B6fdFe985",
      "txHash": "0x54d7e82e680a5429ab732a814e0c4a826f9bd4cb44d6031decb16186168bfc50",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "card",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ICard)3498",
            "contract": "Arena",
            "src": "contracts/Arena.sol:37"
          },
          {
            "label": "eventInfos",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(EventInfo)2112_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:38"
          },
          {
            "label": "bets",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_struct(BetInfo)2120_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:39"
          },
          {
            "label": "betsByUser",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:40"
          },
          {
            "label": "rarities",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)3468)dyn_storage))",
            "contract": "Arena",
            "src": "contracts/Arena.sol:41"
          },
          {
            "label": "maintoken",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(MainToken)3554",
            "contract": "Arena",
            "src": "contracts/Arena.sol:42"
          },
          {
            "label": "calls",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_struct(CallInfo)2134_storage)dyn_storage",
            "contract": "Arena",
            "src": "contracts/Arena.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_enum(CardRarity)3468)dyn_storage": {
            "label": "enum ICard.CardRarity[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(CallInfo)2134_storage)dyn_storage": {
            "label": "struct Arena.CallInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICard)3498": {
            "label": "contract ICard",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)3554": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)3468": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(MatchResult)3398": {
            "label": "enum IArena.MatchResult",
            "members": [
              "MatchIsInProgress",
              "MatchCancelled",
              "FirstWon",
              "Draw",
              "SecondWon"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)3468)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => enum ICard.CardRarity[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_enum(CardRarity)3468)dyn_storage)": {
            "label": "mapping(uint256 => enum ICard.CardRarity[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BetInfo)2120_storage)": {
            "label": "mapping(uint256 => struct Arena.BetInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(EventInfo)2112_storage)": {
            "label": "mapping(uint256 => struct Arena.EventInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(BetInfo)2120_storage": {
            "label": "struct Arena.BetInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)3398",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cardOwner",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(CallInfo)2134_storage": {
            "label": "struct Arena.CallInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)3398",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "firstParticipantAddress",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "firstParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "secondParticipantAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "secondParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(EventInfo)2112_storage": {
            "label": "struct Arena.EventInfo",
            "members": [
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "descriptionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "result",
                "type": "t_enum(MatchResult)3398",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "64ce2f230755af81163be39daabdc6556ee47b33a0acf1017aed44e5a9967565": {
      "address": "0x4b4C527A64BF03EC1DBBc3856C1D4FB0ceBB69b9",
      "txHash": "0xa17648b897240d962f2183a1f13ba169f14f84e1177855c2f45f868a4025a4eb",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_arenaAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IArena)5755",
            "contract": "Card",
            "src": "contracts/Card.sol:25"
          },
          {
            "label": "_lastMint",
            "offset": 0,
            "slot": "252",
            "type": "t_struct(Counter)3142_storage",
            "contract": "Card",
            "src": "contracts/Card.sol:26"
          },
          {
            "label": "_acceptedCurrency",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IERC20Upgradeable)1384",
            "contract": "Card",
            "src": "contracts/Card.sol:27"
          },
          {
            "label": "_prices",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_enum(CardRarity)5766,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:28"
          },
          {
            "label": "_upgradePrices",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_enum(CardRarity)5766,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:29"
          },
          {
            "label": "_rarities",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_enum(CardRarity)5766)",
            "contract": "Card",
            "src": "contracts/Card.sol:30"
          },
          {
            "label": "_mintAllowances",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_enum(CardRarity)5766)",
            "contract": "Card",
            "src": "contracts/Card.sol:31"
          },
          {
            "label": "_livesRemaining",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:40"
          },
          {
            "label": "_lastBetsPerformance",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:51"
          },
          {
            "label": "_maintoken",
            "offset": 0,
            "slot": "260",
            "type": "t_contract(MainToken)5852",
            "contract": "Card",
            "src": "contracts/Card.sol:52"
          },
          {
            "label": "_auctionAddress",
            "offset": 0,
            "slot": "261",
            "type": "t_address",
            "contract": "Card",
            "src": "contracts/Card.sol:53"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IArena)5755": {
            "label": "contract IArena",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1384": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)5852": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)5766": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_enum(CardRarity)5766)": {
            "label": "mapping(address => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(CardRarity)5766,t_uint256)": {
            "label": "mapping(enum ICard.CardRarity => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(CardRarity)5766)": {
            "label": "mapping(uint256 => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3142_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b7de6644dd2f986bc69fa2087191f05963c527e2da820ddd65a90584ec543ac9": {
      "address": "0xA4C29A27c1A8EAfa5F5897fD37B9183701F1cBD4",
      "txHash": "0x5ed91112f91784a017e9bb25aeb71acf342090f88f0e9237ac359c9e12992af8",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "card",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ICard)7056",
            "contract": "Arena",
            "src": "contracts/Arena.sol:37"
          },
          {
            "label": "eventInfos",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(EventInfo)3512_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:38"
          },
          {
            "label": "bets",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_struct(BetInfo)3520_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:39"
          },
          {
            "label": "betsByUser",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:40"
          },
          {
            "label": "rarities",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)7026)dyn_storage))",
            "contract": "Arena",
            "src": "contracts/Arena.sol:41"
          },
          {
            "label": "maintoken",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(MainToken)7112",
            "contract": "Arena",
            "src": "contracts/Arena.sol:42"
          },
          {
            "label": "calls",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_struct(CallInfo)3534_storage)dyn_storage",
            "contract": "Arena",
            "src": "contracts/Arena.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_enum(CardRarity)7026)dyn_storage": {
            "label": "enum ICard.CardRarity[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(CallInfo)3534_storage)dyn_storage": {
            "label": "struct Arena.CallInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICard)7056": {
            "label": "contract ICard",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)7112": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)7026": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(MatchResult)6956": {
            "label": "enum IArena.MatchResult",
            "members": [
              "MatchIsInProgress",
              "MatchCancelled",
              "FirstWon",
              "Draw",
              "SecondWon"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)7026)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => enum ICard.CardRarity[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_enum(CardRarity)7026)dyn_storage)": {
            "label": "mapping(uint256 => enum ICard.CardRarity[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BetInfo)3520_storage)": {
            "label": "mapping(uint256 => struct Arena.BetInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(EventInfo)3512_storage)": {
            "label": "mapping(uint256 => struct Arena.EventInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(BetInfo)3520_storage": {
            "label": "struct Arena.BetInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)6956",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cardOwner",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(CallInfo)3534_storage": {
            "label": "struct Arena.CallInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)6956",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "firstParticipantAddress",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "firstParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "secondParticipantAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "secondParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(EventInfo)3512_storage": {
            "label": "struct Arena.EventInfo",
            "members": [
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "descriptionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "result",
                "type": "t_enum(MatchResult)6956",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d8052bf0356b051a0dacd7661d1852b1d5ca454cf9c37d855c3672e3b849beaf": {
      "address": "0x20D800EcADF191E6f2a409C606Eb3f79eb26d611",
      "txHash": "0x4a876dda57b825c1a20a1c2c7f936da453fe22175a0efbf9c7eff8f372f3ff64",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "card",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ICard)4382",
            "contract": "Arena",
            "src": "contracts/Arena.sol:37"
          },
          {
            "label": "eventInfos",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(EventInfo)2982_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:38"
          },
          {
            "label": "bets",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_struct(BetInfo)2990_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:39"
          },
          {
            "label": "betsByUser",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:40"
          },
          {
            "label": "rarities",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)4352)dyn_storage))",
            "contract": "Arena",
            "src": "contracts/Arena.sol:41"
          },
          {
            "label": "maintoken",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(MainToken)4438",
            "contract": "Arena",
            "src": "contracts/Arena.sol:42"
          },
          {
            "label": "calls",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_struct(CallInfo)3004_storage)dyn_storage",
            "contract": "Arena",
            "src": "contracts/Arena.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_enum(CardRarity)4352)dyn_storage": {
            "label": "enum ICard.CardRarity[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(CallInfo)3004_storage)dyn_storage": {
            "label": "struct Arena.CallInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICard)4382": {
            "label": "contract ICard",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)4438": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)4352": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(MatchResult)4282": {
            "label": "enum IArena.MatchResult",
            "members": [
              "MatchIsInProgress",
              "MatchCancelled",
              "FirstWon",
              "Draw",
              "SecondWon"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)4352)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => enum ICard.CardRarity[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_enum(CardRarity)4352)dyn_storage)": {
            "label": "mapping(uint256 => enum ICard.CardRarity[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BetInfo)2990_storage)": {
            "label": "mapping(uint256 => struct Arena.BetInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(EventInfo)2982_storage)": {
            "label": "mapping(uint256 => struct Arena.EventInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(BetInfo)2990_storage": {
            "label": "struct Arena.BetInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)4282",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cardOwner",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(CallInfo)3004_storage": {
            "label": "struct Arena.CallInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)4282",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "firstParticipantAddress",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "firstParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "secondParticipantAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "secondParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(EventInfo)2982_storage": {
            "label": "struct Arena.EventInfo",
            "members": [
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "descriptionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "result",
                "type": "t_enum(MatchResult)4282",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b9a8a3bd314d4a359c5a438809b603914df1188359de5ba4e0e7555d9e9497c3": {
      "address": "0x34C7070079fa9Fdb4Bf17ae76434846346DF88d5",
      "txHash": "0xc8d0268647e1d7b355c2d59c23ffd5fb8e76ba657cdb0d82b0006353b8297591",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_arenaAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IArena)6864",
            "contract": "Card",
            "src": "contracts/Card.sol:25"
          },
          {
            "label": "_lastMint",
            "offset": 0,
            "slot": "252",
            "type": "t_struct(Counter)3292_storage",
            "contract": "Card",
            "src": "contracts/Card.sol:26"
          },
          {
            "label": "_acceptedCurrency",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IERC20Upgradeable)1399",
            "contract": "Card",
            "src": "contracts/Card.sol:27"
          },
          {
            "label": "_prices",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_enum(CardRarity)6875,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:28"
          },
          {
            "label": "_upgradePrices",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_enum(CardRarity)6875,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:29"
          },
          {
            "label": "_rarities",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_enum(CardRarity)6875)",
            "contract": "Card",
            "src": "contracts/Card.sol:30"
          },
          {
            "label": "_mintAllowances",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_enum(CardRarity)6875)",
            "contract": "Card",
            "src": "contracts/Card.sol:31"
          },
          {
            "label": "_livesRemaining",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:40"
          },
          {
            "label": "_lastBetsPerformance",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:51"
          },
          {
            "label": "_maintoken",
            "offset": 0,
            "slot": "260",
            "type": "t_contract(MainToken)6961",
            "contract": "Card",
            "src": "contracts/Card.sol:52"
          },
          {
            "label": "_auctionAddress",
            "offset": 0,
            "slot": "261",
            "type": "t_address",
            "contract": "Card",
            "src": "contracts/Card.sol:53"
          },
          {
            "label": "_cardInfos",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_struct(CardInfo)5343_storage)",
            "contract": "Card",
            "src": "contracts/Card.sol:60"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IArena)6864": {
            "label": "contract IArena",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1399": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)6961": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)6875": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_enum(CardRarity)6875)": {
            "label": "mapping(address => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(CardRarity)6875,t_uint256)": {
            "label": "mapping(enum ICard.CardRarity => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(CardRarity)6875)": {
            "label": "mapping(uint256 => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CardInfo)5343_storage)": {
            "label": "mapping(uint256 => struct Card.CardInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CardInfo)5343_storage": {
            "label": "struct Card.CardInfo",
            "members": [
              {
                "label": "recoveriesRemains",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "frozenUntil",
                "type": "t_uint64",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3292_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "733638f7362a16d05124059480bff92f2947adae29ed5425be5cd0c676b3b362": {
      "address": "0x76c6B739984861b7bee91a5E12f4a0CD1E6D48cd",
      "txHash": "0xced5594efd85f39f9ba6d06b8b17734ee919dc17090218e4b3ab15b0ca5676b2",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "bets",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_struct(AuctionInfo)7482_storage)",
            "contract": "Auction",
            "src": "contracts/Auction.sol:24"
          },
          {
            "label": "auctionsByUser",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Auction",
            "src": "contracts/Auction.sol:25"
          },
          {
            "label": "card",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(Card)9849",
            "contract": "Auction",
            "src": "contracts/Auction.sol:26"
          },
          {
            "label": "maintoken",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(MainToken)10367",
            "contract": "Auction",
            "src": "contracts/Auction.sol:27"
          },
          {
            "label": "myBets",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_array(t_struct(MyBet)7489_storage)dyn_storage)",
            "contract": "Auction",
            "src": "contracts/Auction.sol:28"
          },
          {
            "label": "_commission",
            "offset": 0,
            "slot": "106",
            "type": "t_uint8",
            "contract": "Auction",
            "src": "contracts/Auction.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(MyBet)7489_storage)dyn_storage": {
            "label": "struct Auction.MyBet[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Card)9849": {
            "label": "contract Card",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)10367": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(MyBet)7489_storage)dyn_storage)": {
            "label": "mapping(address => struct Auction.MyBet[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AuctionInfo)7482_storage)": {
            "label": "mapping(uint256 => struct Auction.AuctionInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(AuctionInfo)7482_storage": {
            "label": "struct Auction.AuctionInfo",
            "members": [
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bestBet",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "bestBettor",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(MyBet)7489_storage": {
            "label": "struct Auction.MyBet",
            "members": [
              {
                "label": "cardId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "76971441fc991ce48d1cb2ec9aa8ed6b0f7ca44cf37dae3996bc9c907ee8081b": {
      "address": "0xe4808803D13D6bB36C6B54eEf51732B926443d27",
      "txHash": "0x9400e4c7fc163a183bdc855bcd5f574e996f009dc1b2b9f58b6cb1a3c66d6167",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_arenaAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IArena)8366",
            "contract": "Card",
            "src": "contracts/Card.sol:25"
          },
          {
            "label": "_lastMint",
            "offset": 0,
            "slot": "252",
            "type": "t_struct(Counter)3446_storage",
            "contract": "Card",
            "src": "contracts/Card.sol:26"
          },
          {
            "label": "_acceptedCurrency",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IERC20Upgradeable)1553",
            "contract": "Card",
            "src": "contracts/Card.sol:27"
          },
          {
            "label": "_prices",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_enum(CardRarity)8377,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:28"
          },
          {
            "label": "_upgradePrices",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_enum(CardRarity)8377,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:29"
          },
          {
            "label": "_rarities",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_enum(CardRarity)8377)",
            "contract": "Card",
            "src": "contracts/Card.sol:30"
          },
          {
            "label": "_mintAllowances",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_enum(CardRarity)8377)",
            "contract": "Card",
            "src": "contracts/Card.sol:31"
          },
          {
            "label": "_livesRemaining",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:40"
          },
          {
            "label": "_lastBetsPerformance",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:51"
          },
          {
            "label": "_maintoken",
            "offset": 0,
            "slot": "260",
            "type": "t_contract(MainToken)8817",
            "contract": "Card",
            "src": "contracts/Card.sol:52"
          },
          {
            "label": "_auctionAddress",
            "offset": 0,
            "slot": "261",
            "type": "t_address",
            "contract": "Card",
            "src": "contracts/Card.sol:53"
          },
          {
            "label": "_cardInfos",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_struct(CardInfo)6854_storage)",
            "contract": "Card",
            "src": "contracts/Card.sol:60"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IArena)8366": {
            "label": "contract IArena",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1553": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)8817": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)8377": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_enum(CardRarity)8377)": {
            "label": "mapping(address => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(CardRarity)8377,t_uint256)": {
            "label": "mapping(enum ICard.CardRarity => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(CardRarity)8377)": {
            "label": "mapping(uint256 => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CardInfo)6854_storage)": {
            "label": "mapping(uint256 => struct Card.CardInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CardInfo)6854_storage": {
            "label": "struct Card.CardInfo",
            "members": [
              {
                "label": "recoveriesRemains",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "frozenUntil",
                "type": "t_uint64",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3446_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "cab89c52dc99ab37685060c489d3716f5c2dc5d1a310f97f2d85717a0a7ab9bd": {
      "address": "0xf1E93f7e9ACbe2d88a6feA3d9f111F6a8cbaD69f",
      "txHash": "0xbdcb68c6d5257264e66b0699044411f30c1796aec891842130eb7689bae5d177",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_arenaAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IArena)5973",
            "contract": "Card",
            "src": "contracts/Card.sol:25"
          },
          {
            "label": "_lastMint",
            "offset": 0,
            "slot": "252",
            "type": "t_struct(Counter)3160_storage",
            "contract": "Card",
            "src": "contracts/Card.sol:26"
          },
          {
            "label": "_acceptedCurrency",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IERC20Upgradeable)1267",
            "contract": "Card",
            "src": "contracts/Card.sol:27"
          },
          {
            "label": "_prices",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_enum(CardRarity)5984,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:28"
          },
          {
            "label": "_upgradePrices",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_enum(CardRarity)5984,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:29"
          },
          {
            "label": "_rarities",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_enum(CardRarity)5984)",
            "contract": "Card",
            "src": "contracts/Card.sol:30"
          },
          {
            "label": "_mintAllowances",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_enum(CardRarity)5984)",
            "contract": "Card",
            "src": "contracts/Card.sol:31"
          },
          {
            "label": "_livesRemaining",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:40"
          },
          {
            "label": "_lastBetsPerformance",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:51"
          },
          {
            "label": "_maintoken",
            "offset": 0,
            "slot": "260",
            "type": "t_contract(MainToken)6070",
            "contract": "Card",
            "src": "contracts/Card.sol:52"
          },
          {
            "label": "_auctionAddress",
            "offset": 0,
            "slot": "261",
            "type": "t_address",
            "contract": "Card",
            "src": "contracts/Card.sol:53"
          },
          {
            "label": "_cardInfos",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_struct(CardInfo)4446_storage)",
            "contract": "Card",
            "src": "contracts/Card.sol:60"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IArena)5973": {
            "label": "contract IArena",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1267": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)6070": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)5984": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_enum(CardRarity)5984)": {
            "label": "mapping(address => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(CardRarity)5984,t_uint256)": {
            "label": "mapping(enum ICard.CardRarity => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(CardRarity)5984)": {
            "label": "mapping(uint256 => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CardInfo)4446_storage)": {
            "label": "mapping(uint256 => struct Card.CardInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CardInfo)4446_storage": {
            "label": "struct Card.CardInfo",
            "members": [
              {
                "label": "recoveriesRemains",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "frozenUntil",
                "type": "t_uint64",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3160_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "782839ffe04e7766cc7ca7967509698f08f842fbf280d4bec33a66ac95f2bab2": {
      "address": "0x0aaF980C956BF5737c3Eb2728BD90FA1C56fCFfC",
      "txHash": "0x0531dc5eddcde2237cdba9585cf09e550592710cb226baf4ee34a9dc493de07f",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_arenaAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IArena)5987",
            "contract": "Card",
            "src": "contracts/Card.sol:25"
          },
          {
            "label": "_lastMint",
            "offset": 0,
            "slot": "252",
            "type": "t_struct(Counter)3160_storage",
            "contract": "Card",
            "src": "contracts/Card.sol:26"
          },
          {
            "label": "_acceptedCurrency",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IERC20Upgradeable)1267",
            "contract": "Card",
            "src": "contracts/Card.sol:27"
          },
          {
            "label": "_prices",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_enum(CardRarity)5998,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:28"
          },
          {
            "label": "_upgradePrices",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_enum(CardRarity)5998,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:29"
          },
          {
            "label": "_rarities",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_enum(CardRarity)5998)",
            "contract": "Card",
            "src": "contracts/Card.sol:30"
          },
          {
            "label": "_mintAllowances",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_enum(CardRarity)5998)",
            "contract": "Card",
            "src": "contracts/Card.sol:31"
          },
          {
            "label": "_livesRemaining",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:40"
          },
          {
            "label": "_lastBetsPerformance",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:51"
          },
          {
            "label": "_maintoken",
            "offset": 0,
            "slot": "260",
            "type": "t_contract(MainToken)6084",
            "contract": "Card",
            "src": "contracts/Card.sol:52"
          },
          {
            "label": "_auctionAddress",
            "offset": 0,
            "slot": "261",
            "type": "t_address",
            "contract": "Card",
            "src": "contracts/Card.sol:53"
          },
          {
            "label": "_cardInfos",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_struct(CardInfo)4446_storage)",
            "contract": "Card",
            "src": "contracts/Card.sol:60"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IArena)5987": {
            "label": "contract IArena",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1267": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)6084": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)5998": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_enum(CardRarity)5998)": {
            "label": "mapping(address => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(CardRarity)5998,t_uint256)": {
            "label": "mapping(enum ICard.CardRarity => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(CardRarity)5998)": {
            "label": "mapping(uint256 => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CardInfo)4446_storage)": {
            "label": "mapping(uint256 => struct Card.CardInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CardInfo)4446_storage": {
            "label": "struct Card.CardInfo",
            "members": [
              {
                "label": "recoveriesRemains",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "frozenUntil",
                "type": "t_uint64",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3160_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7d12e2e315b738dfe56b036499250041e959bfd16027e15089eb78b5545fb83b": {
      "address": "0xc728C457125D835286E06f97e9362c1AdB9243F9",
      "txHash": "0x1e1427b9d83977fa177749b7ba74ab675f7b48a9cce1cc723a0650593bb5e54a",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_arenaAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IArena)6000",
            "contract": "Card",
            "src": "contracts/Card.sol:25"
          },
          {
            "label": "_lastMint",
            "offset": 0,
            "slot": "252",
            "type": "t_struct(Counter)3160_storage",
            "contract": "Card",
            "src": "contracts/Card.sol:26"
          },
          {
            "label": "_acceptedCurrency",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IERC20Upgradeable)1267",
            "contract": "Card",
            "src": "contracts/Card.sol:27"
          },
          {
            "label": "_prices",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_enum(CardRarity)6011,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:28"
          },
          {
            "label": "_upgradePrices",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_enum(CardRarity)6011,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:29"
          },
          {
            "label": "_rarities",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_enum(CardRarity)6011)",
            "contract": "Card",
            "src": "contracts/Card.sol:30"
          },
          {
            "label": "_mintAllowances",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_enum(CardRarity)6011)",
            "contract": "Card",
            "src": "contracts/Card.sol:31"
          },
          {
            "label": "_livesRemaining",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:40"
          },
          {
            "label": "_lastBetsPerformance",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:51"
          },
          {
            "label": "_maintoken",
            "offset": 0,
            "slot": "260",
            "type": "t_contract(MainToken)6097",
            "contract": "Card",
            "src": "contracts/Card.sol:52"
          },
          {
            "label": "_auctionAddress",
            "offset": 0,
            "slot": "261",
            "type": "t_address",
            "contract": "Card",
            "src": "contracts/Card.sol:53"
          },
          {
            "label": "_cardInfos",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_struct(CardInfo)4446_storage)",
            "contract": "Card",
            "src": "contracts/Card.sol:60"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IArena)6000": {
            "label": "contract IArena",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1267": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)6097": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)6011": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_enum(CardRarity)6011)": {
            "label": "mapping(address => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(CardRarity)6011,t_uint256)": {
            "label": "mapping(enum ICard.CardRarity => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(CardRarity)6011)": {
            "label": "mapping(uint256 => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CardInfo)4446_storage)": {
            "label": "mapping(uint256 => struct Card.CardInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CardInfo)4446_storage": {
            "label": "struct Card.CardInfo",
            "members": [
              {
                "label": "recoveriesRemains",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "frozenUntil",
                "type": "t_uint64",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3160_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1e2d7551f58e76d868d1742ab683aaa6c4fcd8ef03b8f16aaa1aa983bb3fc315": {
      "address": "0xd4a9b0C254bf50E55967137359602288e19A44E9",
      "txHash": "0x9bc70bce148f592e754f882c333fc6ed8af8d176b025886461233bc50c738e6b",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_arenaAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IArena)6959",
            "contract": "Card",
            "src": "contracts/Card.sol:25"
          },
          {
            "label": "_lastMint",
            "offset": 0,
            "slot": "252",
            "type": "t_struct(Counter)3292_storage",
            "contract": "Card",
            "src": "contracts/Card.sol:26"
          },
          {
            "label": "_acceptedCurrency",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IERC20Upgradeable)1399",
            "contract": "Card",
            "src": "contracts/Card.sol:27"
          },
          {
            "label": "_prices",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_enum(CardRarity)6970,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:28"
          },
          {
            "label": "_upgradePrices",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_enum(CardRarity)6970,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:29"
          },
          {
            "label": "_rarities",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_enum(CardRarity)6970)",
            "contract": "Card",
            "src": "contracts/Card.sol:30"
          },
          {
            "label": "_mintAllowances",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_enum(CardRarity)6970)",
            "contract": "Card",
            "src": "contracts/Card.sol:31"
          },
          {
            "label": "_livesRemaining",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:40"
          },
          {
            "label": "_lastBetsPerformance",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:51"
          },
          {
            "label": "_maintoken",
            "offset": 0,
            "slot": "260",
            "type": "t_contract(MainToken)7056",
            "contract": "Card",
            "src": "contracts/Card.sol:52"
          },
          {
            "label": "_auctionAddress",
            "offset": 0,
            "slot": "261",
            "type": "t_address",
            "contract": "Card",
            "src": "contracts/Card.sol:53"
          },
          {
            "label": "_cardInfos",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_struct(CardInfo)5383_storage)",
            "contract": "Card",
            "src": "contracts/Card.sol:60"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IArena)6959": {
            "label": "contract IArena",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1399": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)7056": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)6970": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_enum(CardRarity)6970)": {
            "label": "mapping(address => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(CardRarity)6970,t_uint256)": {
            "label": "mapping(enum ICard.CardRarity => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(CardRarity)6970)": {
            "label": "mapping(uint256 => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CardInfo)5383_storage)": {
            "label": "mapping(uint256 => struct Card.CardInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CardInfo)5383_storage": {
            "label": "struct Card.CardInfo",
            "members": [
              {
                "label": "recoveriesRemains",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "frozenUntil",
                "type": "t_uint64",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3292_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "35df043a0def454db23efccf6a5ddeaa8b2dcd1b9bcabf864b85e684ac00d2f3": {
      "address": "0xa7CB2231939679e0AA91b340B07AfbD64Ba1EFC1",
      "txHash": "0xc1ce2d0cc2dbf5765772431c1e553be033a77b7a0c9512bbd34d601a3f564043",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "card",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ICard)11009",
            "contract": "Arena",
            "src": "contracts/Arena.sol:40"
          },
          {
            "label": "eventInfos",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(EventInfo)6945_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:41"
          },
          {
            "label": "bets",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_struct(BetInfo)6955_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:42"
          },
          {
            "label": "betsByUser",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:43"
          },
          {
            "label": "rarities",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)10979)dyn_storage))",
            "contract": "Arena",
            "src": "contracts/Arena.sol:44"
          },
          {
            "label": "maintoken",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(MainToken)11419",
            "contract": "Arena",
            "src": "contracts/Arena.sol:45"
          },
          {
            "label": "calls",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_struct(CallInfo)6969_storage)dyn_storage",
            "contract": "Arena",
            "src": "contracts/Arena.sol:47"
          },
          {
            "label": "_betId",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "Arena",
            "src": "contracts/Arena.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_enum(CardRarity)10979)dyn_storage": {
            "label": "enum ICard.CardRarity[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(CallInfo)6969_storage)dyn_storage": {
            "label": "struct Arena.CallInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICard)11009": {
            "label": "contract ICard",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)11419": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)10979": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(MatchResult)10909": {
            "label": "enum IArena.MatchResult",
            "members": [
              "MatchIsInProgress",
              "MatchCancelled",
              "FirstWon",
              "Draw",
              "SecondWon"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)10979)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => enum ICard.CardRarity[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_enum(CardRarity)10979)dyn_storage)": {
            "label": "mapping(uint256 => enum ICard.CardRarity[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BetInfo)6955_storage)": {
            "label": "mapping(uint256 => struct Arena.BetInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(EventInfo)6945_storage)": {
            "label": "mapping(uint256 => struct Arena.EventInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(BetInfo)6955_storage": {
            "label": "struct Arena.BetInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)10909",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cardOwner",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "betId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(CallInfo)6969_storage": {
            "label": "struct Arena.CallInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)10909",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "firstParticipantAddress",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "firstParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "secondParticipantAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "secondParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(EventInfo)6945_storage": {
            "label": "struct Arena.EventInfo",
            "members": [
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "descriptionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "result",
                "type": "t_enum(MatchResult)10909",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0958ed853f0ac090713246de9122d1dce74dca4c22fb57308009dd315026705d": {
      "address": "0xDF4FB06fae7F788d7D011d4a5c208Bd4cF637733",
      "txHash": "0x4917007dbc7399d32d56fc847c8ceb9c4cd158d50f74305db55057fb02d6edea",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "bets",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_struct(AuctionInfo)4485_storage)",
            "contract": "Auction",
            "src": "contracts/Auction.sol:25"
          },
          {
            "label": "auctionsByUser",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Auction",
            "src": "contracts/Auction.sol:26"
          },
          {
            "label": "card",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(Card)6892",
            "contract": "Auction",
            "src": "contracts/Auction.sol:27"
          },
          {
            "label": "maintoken",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(MainToken)7056",
            "contract": "Auction",
            "src": "contracts/Auction.sol:28"
          },
          {
            "label": "myBets",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_array(t_struct(MyBet)4494_storage)dyn_storage)",
            "contract": "Auction",
            "src": "contracts/Auction.sol:29"
          },
          {
            "label": "_commission",
            "offset": 0,
            "slot": "106",
            "type": "t_uint8",
            "contract": "Auction",
            "src": "contracts/Auction.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(MyBet)4494_storage)dyn_storage": {
            "label": "struct Auction.MyBet[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Card)6892": {
            "label": "contract Card",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)7056": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(MyBet)4494_storage)dyn_storage)": {
            "label": "mapping(address => struct Auction.MyBet[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AuctionInfo)4485_storage)": {
            "label": "mapping(uint256 => struct Auction.AuctionInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(AuctionInfo)4485_storage": {
            "label": "struct Auction.AuctionInfo",
            "members": [
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bestBet",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "bestBettor",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(MyBet)4494_storage": {
            "label": "struct Auction.MyBet",
            "members": [
              {
                "label": "cardId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bb26c382c4521188e4d3ead74f76563eb04558e928cb84fc9c621cb62b4738d3": {
      "address": "0x900fa974349BF8654089831C736c9744FB38cF0e",
      "txHash": "0x363f91ce5a1cbc4291c2d9819e15c545615d97861579151aa4af11c0b8d0a1b9",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_arenaAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IArena)6067",
            "contract": "Card",
            "src": "contracts/Card.sol:25"
          },
          {
            "label": "_lastMint",
            "offset": 0,
            "slot": "252",
            "type": "t_struct(Counter)3160_storage",
            "contract": "Card",
            "src": "contracts/Card.sol:26"
          },
          {
            "label": "_acceptedCurrency",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IERC20Upgradeable)1267",
            "contract": "Card",
            "src": "contracts/Card.sol:27"
          },
          {
            "label": "_prices",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_enum(CardRarity)6078,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:28"
          },
          {
            "label": "_upgradePrices",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_enum(CardRarity)6078,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:29"
          },
          {
            "label": "_rarities",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_enum(CardRarity)6078)",
            "contract": "Card",
            "src": "contracts/Card.sol:30"
          },
          {
            "label": "_mintAllowances",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_enum(CardRarity)6078)",
            "contract": "Card",
            "src": "contracts/Card.sol:31"
          },
          {
            "label": "_livesRemaining",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:40"
          },
          {
            "label": "_lastBetsPerformance",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:51"
          },
          {
            "label": "_maintoken",
            "offset": 0,
            "slot": "260",
            "type": "t_contract(MainToken)6164",
            "contract": "Card",
            "src": "contracts/Card.sol:52"
          },
          {
            "label": "_auctionAddress",
            "offset": 0,
            "slot": "261",
            "type": "t_address",
            "contract": "Card",
            "src": "contracts/Card.sol:53"
          },
          {
            "label": "_cardInfos",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_struct(CardInfo)4446_storage)",
            "contract": "Card",
            "src": "contracts/Card.sol:60"
          },
          {
            "label": "_freeMintNonce",
            "offset": 0,
            "slot": "263",
            "type": "t_uint256",
            "contract": "Card",
            "src": "contracts/Card.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IArena)6067": {
            "label": "contract IArena",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1267": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)6164": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)6078": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_enum(CardRarity)6078)": {
            "label": "mapping(address => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(CardRarity)6078,t_uint256)": {
            "label": "mapping(enum ICard.CardRarity => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(CardRarity)6078)": {
            "label": "mapping(uint256 => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CardInfo)4446_storage)": {
            "label": "mapping(uint256 => struct Card.CardInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CardInfo)4446_storage": {
            "label": "struct Card.CardInfo",
            "members": [
              {
                "label": "recoveriesDone",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "frozenUntil",
                "type": "t_uint64",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3160_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "dcbcc54373ae03a12b6ff0da5c5cd4fee223111b0257bfe5ac267edc354e02c9": {
      "address": "0x0e0a0f02F37535303Eb128BEE012866A249D1338",
      "txHash": "0xfd16b1ced554d03bf8f818a4015770c3277fa84393f37d7242e5acf8fc570c0a",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_arenaAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IArena)7587",
            "contract": "Card",
            "src": "contracts/Card.sol:25"
          },
          {
            "label": "_lastMint",
            "offset": 0,
            "slot": "252",
            "type": "t_struct(Counter)3314_storage",
            "contract": "Card",
            "src": "contracts/Card.sol:26"
          },
          {
            "label": "_acceptedCurrency",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IERC20Upgradeable)1421",
            "contract": "Card",
            "src": "contracts/Card.sol:27"
          },
          {
            "label": "_prices",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_enum(CardRarity)7598,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:28"
          },
          {
            "label": "_upgradePrices",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_enum(CardRarity)7598,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:29"
          },
          {
            "label": "_rarities",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_enum(CardRarity)7598)",
            "contract": "Card",
            "src": "contracts/Card.sol:30"
          },
          {
            "label": "_mintAllowances",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_enum(CardRarity)7598)",
            "contract": "Card",
            "src": "contracts/Card.sol:31"
          },
          {
            "label": "_livesRemaining",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:40"
          },
          {
            "label": "_lastBetsPerformance",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:51"
          },
          {
            "label": "_maintoken",
            "offset": 0,
            "slot": "260",
            "type": "t_contract(MainToken)8059",
            "contract": "Card",
            "src": "contracts/Card.sol:52"
          },
          {
            "label": "_auctionAddress",
            "offset": 0,
            "slot": "261",
            "type": "t_address",
            "contract": "Card",
            "src": "contracts/Card.sol:53"
          },
          {
            "label": "_cardInfos",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_struct(CardInfo)5957_storage)",
            "contract": "Card",
            "src": "contracts/Card.sol:60"
          },
          {
            "label": "_freeMintNonce",
            "offset": 0,
            "slot": "263",
            "type": "t_uint256",
            "contract": "Card",
            "src": "contracts/Card.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IArena)7587": {
            "label": "contract IArena",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1421": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)8059": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)7598": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_enum(CardRarity)7598)": {
            "label": "mapping(address => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(CardRarity)7598,t_uint256)": {
            "label": "mapping(enum ICard.CardRarity => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(CardRarity)7598)": {
            "label": "mapping(uint256 => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CardInfo)5957_storage)": {
            "label": "mapping(uint256 => struct Card.CardInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CardInfo)5957_storage": {
            "label": "struct Card.CardInfo",
            "members": [
              {
                "label": "recoveriesDone",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "frozenUntil",
                "type": "t_uint64",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3314_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "876c9dc516c83a6927a5d1742c35a0021a9600344e2e7b1c0afc18c9e9661cf7": {
      "address": "0x38Ddaa4e228e1Bafb56af70F7874254bC3e156C8",
      "txHash": "0xef5cc34fab3620c4077d236ba025a6df3336d3d01803ffb835095a86e713d8a1",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_arenaAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IArena)7591",
            "contract": "Card",
            "src": "contracts/Card.sol:25"
          },
          {
            "label": "_lastMint",
            "offset": 0,
            "slot": "252",
            "type": "t_struct(Counter)3314_storage",
            "contract": "Card",
            "src": "contracts/Card.sol:26"
          },
          {
            "label": "_acceptedCurrency",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IERC20Upgradeable)1421",
            "contract": "Card",
            "src": "contracts/Card.sol:27"
          },
          {
            "label": "_prices",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_enum(CardRarity)7602,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:28"
          },
          {
            "label": "_upgradePrices",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_enum(CardRarity)7602,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:29"
          },
          {
            "label": "_rarities",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_enum(CardRarity)7602)",
            "contract": "Card",
            "src": "contracts/Card.sol:30"
          },
          {
            "label": "_mintAllowances",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_enum(CardRarity)7602)",
            "contract": "Card",
            "src": "contracts/Card.sol:31"
          },
          {
            "label": "_livesRemaining",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:40"
          },
          {
            "label": "_lastBetsPerformance",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:51"
          },
          {
            "label": "_maintoken",
            "offset": 0,
            "slot": "260",
            "type": "t_contract(MainToken)8063",
            "contract": "Card",
            "src": "contracts/Card.sol:52"
          },
          {
            "label": "_auctionAddress",
            "offset": 0,
            "slot": "261",
            "type": "t_address",
            "contract": "Card",
            "src": "contracts/Card.sol:53"
          },
          {
            "label": "_cardInfos",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_struct(CardInfo)5957_storage)",
            "contract": "Card",
            "src": "contracts/Card.sol:60"
          },
          {
            "label": "_freeMintNonce",
            "offset": 0,
            "slot": "263",
            "type": "t_uint256",
            "contract": "Card",
            "src": "contracts/Card.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IArena)7591": {
            "label": "contract IArena",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1421": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)8063": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)7602": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_enum(CardRarity)7602)": {
            "label": "mapping(address => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(CardRarity)7602,t_uint256)": {
            "label": "mapping(enum ICard.CardRarity => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(CardRarity)7602)": {
            "label": "mapping(uint256 => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CardInfo)5957_storage)": {
            "label": "mapping(uint256 => struct Card.CardInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CardInfo)5957_storage": {
            "label": "struct Card.CardInfo",
            "members": [
              {
                "label": "recoveriesDone",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "frozenUntil",
                "type": "t_uint64",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3314_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a273474fa0587c12d733835703602d7e58686471a33b60c5373d4374bcd32a21": {
      "address": "0x60A5874400f17e100a326d2aFa81f2AD230eDD30",
      "txHash": "0x8a79fc043ebfb27789e9bc8e7c7afce66e9c684c813d1932679c8d64dc3c1825",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "card",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ICard)4701",
            "contract": "Arena",
            "src": "contracts/Arena.sol:40"
          },
          {
            "label": "eventInfos",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(EventInfo)2982_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:41"
          },
          {
            "label": "bets",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_struct(BetInfo)2992_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:42"
          },
          {
            "label": "betsByUser",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:43"
          },
          {
            "label": "rarities",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)4671)dyn_storage))",
            "contract": "Arena",
            "src": "contracts/Arena.sol:44"
          },
          {
            "label": "maintoken",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(MainToken)4757",
            "contract": "Arena",
            "src": "contracts/Arena.sol:45"
          },
          {
            "label": "calls",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_struct(CallInfo)3006_storage)dyn_storage",
            "contract": "Arena",
            "src": "contracts/Arena.sol:47"
          },
          {
            "label": "_betId",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "Arena",
            "src": "contracts/Arena.sol:48"
          },
          {
            "label": "callsByUser",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_enum(CardRarity)4671)dyn_storage": {
            "label": "enum ICard.CardRarity[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(CallInfo)3006_storage)dyn_storage": {
            "label": "struct Arena.CallInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICard)4701": {
            "label": "contract ICard",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)4757": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)4671": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(MatchResult)4601": {
            "label": "enum IArena.MatchResult",
            "members": [
              "MatchIsInProgress",
              "MatchCancelled",
              "FirstWon",
              "Draw",
              "SecondWon"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)4671)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => enum ICard.CardRarity[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_enum(CardRarity)4671)dyn_storage)": {
            "label": "mapping(uint256 => enum ICard.CardRarity[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BetInfo)2992_storage)": {
            "label": "mapping(uint256 => struct Arena.BetInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(EventInfo)2982_storage)": {
            "label": "mapping(uint256 => struct Arena.EventInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(BetInfo)2992_storage": {
            "label": "struct Arena.BetInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)4601",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cardOwner",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "betId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(CallInfo)3006_storage": {
            "label": "struct Arena.CallInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)4601",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "firstParticipantAddress",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "firstParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "secondParticipantAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "secondParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(EventInfo)2982_storage": {
            "label": "struct Arena.EventInfo",
            "members": [
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "descriptionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "result",
                "type": "t_enum(MatchResult)4601",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e41ff75cf2d0ba67ca82d9a2fe68e0151b7516816f6e55ebcebd47713db20e13": {
      "address": "0x38008b2c033545B713143dc5BF28A3FF77A0387e",
      "txHash": "0x904e60d6e5256b316a8d25dde9f72171f7999d87736bd40baba0af574f8d1fa2",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_arenaAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IArena)7230",
            "contract": "Card",
            "src": "contracts/Card.sol:25"
          },
          {
            "label": "_lastMint",
            "offset": 0,
            "slot": "252",
            "type": "t_struct(Counter)3292_storage",
            "contract": "Card",
            "src": "contracts/Card.sol:26"
          },
          {
            "label": "_acceptedCurrency",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IERC20Upgradeable)1399",
            "contract": "Card",
            "src": "contracts/Card.sol:27"
          },
          {
            "label": "_prices",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_enum(CardRarity)7241,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:28"
          },
          {
            "label": "_upgradePrices",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_enum(CardRarity)7241,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:29"
          },
          {
            "label": "_rarities",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_enum(CardRarity)7241)",
            "contract": "Card",
            "src": "contracts/Card.sol:30"
          },
          {
            "label": "_mintAllowances",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_enum(CardRarity)7241)",
            "contract": "Card",
            "src": "contracts/Card.sol:31"
          },
          {
            "label": "_livesRemaining",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:40"
          },
          {
            "label": "_lastBetsPerformance",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:51"
          },
          {
            "label": "_maintoken",
            "offset": 0,
            "slot": "260",
            "type": "t_contract(MainToken)7327",
            "contract": "Card",
            "src": "contracts/Card.sol:52"
          },
          {
            "label": "_auctionAddress",
            "offset": 0,
            "slot": "261",
            "type": "t_address",
            "contract": "Card",
            "src": "contracts/Card.sol:53"
          },
          {
            "label": "_cardInfos",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_struct(CardInfo)5554_storage)",
            "contract": "Card",
            "src": "contracts/Card.sol:60"
          },
          {
            "label": "_freeMintNonce",
            "offset": 0,
            "slot": "263",
            "type": "t_uint256",
            "contract": "Card",
            "src": "contracts/Card.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IArena)7230": {
            "label": "contract IArena",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1399": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)7327": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)7241": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_enum(CardRarity)7241)": {
            "label": "mapping(address => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(CardRarity)7241,t_uint256)": {
            "label": "mapping(enum ICard.CardRarity => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(CardRarity)7241)": {
            "label": "mapping(uint256 => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CardInfo)5554_storage)": {
            "label": "mapping(uint256 => struct Card.CardInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CardInfo)5554_storage": {
            "label": "struct Card.CardInfo",
            "members": [
              {
                "label": "recoveriesDone",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "frozenUntil",
                "type": "t_uint64",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3292_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bbfc0aa17fc91711b3b4001f64d3a8ba95f415ffd6b7736f8a0efbe797b4dec1": {
      "address": "0x1c7c8cd9f2Ee458EAB2baEa9b1841BaDBdcC6812",
      "txHash": "0x01d8f00713e01c6226fb6a68542e7049051b45b83f5b3a64dec1b72a0b1736a1",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "card",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ICard)4879",
            "contract": "Arena",
            "src": "contracts/Arena.sol:40"
          },
          {
            "label": "eventInfos",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(EventInfo)2982_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:41"
          },
          {
            "label": "bets",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_struct(BetInfo)2992_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:42"
          },
          {
            "label": "betsByUser",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:43"
          },
          {
            "label": "rarities",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)4849)dyn_storage))",
            "contract": "Arena",
            "src": "contracts/Arena.sol:44"
          },
          {
            "label": "maintoken",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(MainToken)4935",
            "contract": "Arena",
            "src": "contracts/Arena.sol:45"
          },
          {
            "label": "calls",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_struct(CallInfo)3006_storage)dyn_storage",
            "contract": "Arena",
            "src": "contracts/Arena.sol:47"
          },
          {
            "label": "_betId",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "Arena",
            "src": "contracts/Arena.sol:48"
          },
          {
            "label": "callsByUser",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_enum(CardRarity)4849)dyn_storage": {
            "label": "enum ICard.CardRarity[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(CallInfo)3006_storage)dyn_storage": {
            "label": "struct Arena.CallInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICard)4879": {
            "label": "contract ICard",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)4935": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)4849": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(MatchResult)4779": {
            "label": "enum IArena.MatchResult",
            "members": [
              "MatchIsInProgress",
              "MatchCancelled",
              "FirstWon",
              "Draw",
              "SecondWon"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)4849)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => enum ICard.CardRarity[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_enum(CardRarity)4849)dyn_storage)": {
            "label": "mapping(uint256 => enum ICard.CardRarity[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BetInfo)2992_storage)": {
            "label": "mapping(uint256 => struct Arena.BetInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(EventInfo)2982_storage)": {
            "label": "mapping(uint256 => struct Arena.EventInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(BetInfo)2992_storage": {
            "label": "struct Arena.BetInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)4779",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cardOwner",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "betId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(CallInfo)3006_storage": {
            "label": "struct Arena.CallInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)4779",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "firstParticipantAddress",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "firstParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "secondParticipantAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "secondParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(EventInfo)2982_storage": {
            "label": "struct Arena.EventInfo",
            "members": [
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "descriptionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "result",
                "type": "t_enum(MatchResult)4779",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "61e3c5d72929c33ded309f2ddf69d9911c240f872ab801aa1b9e178d85c1fec7": {
      "address": "0x016C8B523dAD374BAEBF21499CD79095df15441a",
      "txHash": "0xa5e1fb882ec8bfcfec020ee7986258e5ac440f35b01fc0320d903cbab6292a95",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "bets",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_struct(AuctionInfo)4485_storage)",
            "contract": "AuctionCoreUpgdaeable",
            "src": "contracts/Auction.sol:25"
          },
          {
            "label": "auctionsByUser",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "AuctionCoreUpgdaeable",
            "src": "contracts/Auction.sol:26"
          },
          {
            "label": "card",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(Card)7163",
            "contract": "AuctionCoreUpgdaeable",
            "src": "contracts/Auction.sol:27"
          },
          {
            "label": "myBets",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_array(t_struct(MyBet)4494_storage)dyn_storage)",
            "contract": "AuctionCoreUpgdaeable",
            "src": "contracts/Auction.sol:29"
          },
          {
            "label": "_commission",
            "offset": 0,
            "slot": "105",
            "type": "t_uint8",
            "contract": "AuctionCoreUpgdaeable",
            "src": "contracts/Auction.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AuctionCoreUpgdaeable",
            "src": "contracts/Auction.sol:157"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(MyBet)4494_storage)dyn_storage": {
            "label": "struct AuctionCoreUpgdaeable.MyBet[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Card)7163": {
            "label": "contract Card",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(MyBet)4494_storage)dyn_storage)": {
            "label": "mapping(address => struct AuctionCoreUpgdaeable.MyBet[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AuctionInfo)4485_storage)": {
            "label": "mapping(uint256 => struct AuctionCoreUpgdaeable.AuctionInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(AuctionInfo)4485_storage": {
            "label": "struct AuctionCoreUpgdaeable.AuctionInfo",
            "members": [
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bestBet",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "bestBettor",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(MyBet)4494_storage": {
            "label": "struct AuctionCoreUpgdaeable.MyBet",
            "members": [
              {
                "label": "cardId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "40118ed13a9d358273669431b74aa2054e10252c330ca7821e4c6154f2b40d4a": {
      "address": "0xb70197B6B3dA1bc981D7EdbF8656eE11F118B8d4",
      "txHash": "0x79b4f8c4477276852599a2508023f977eb970c9e7404dac6c3232ad25cde14cf",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "card",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ICard)5071",
            "contract": "Arena",
            "src": "contracts/Arena.sol:40"
          },
          {
            "label": "eventInfos",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(EventInfo)2982_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:41"
          },
          {
            "label": "bets",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_struct(BetInfo)2992_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:42"
          },
          {
            "label": "betsByUser",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:43"
          },
          {
            "label": "rarities",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)5041)dyn_storage))",
            "contract": "Arena",
            "src": "contracts/Arena.sol:44"
          },
          {
            "label": "maintoken",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(MainToken)5127",
            "contract": "Arena",
            "src": "contracts/Arena.sol:45"
          },
          {
            "label": "calls",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_struct(CallInfo)3006_storage)dyn_storage",
            "contract": "Arena",
            "src": "contracts/Arena.sol:47"
          },
          {
            "label": "_betId",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "Arena",
            "src": "contracts/Arena.sol:48"
          },
          {
            "label": "callsByUser",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_enum(CardRarity)5041)dyn_storage": {
            "label": "enum ICard.CardRarity[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(CallInfo)3006_storage)dyn_storage": {
            "label": "struct Arena.CallInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICard)5071": {
            "label": "contract ICard",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)5127": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)5041": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(MatchResult)4971": {
            "label": "enum IArena.MatchResult",
            "members": [
              "MatchIsInProgress",
              "MatchCancelled",
              "FirstWon",
              "Draw",
              "SecondWon"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)5041)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => enum ICard.CardRarity[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_enum(CardRarity)5041)dyn_storage)": {
            "label": "mapping(uint256 => enum ICard.CardRarity[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BetInfo)2992_storage)": {
            "label": "mapping(uint256 => struct Arena.BetInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(EventInfo)2982_storage)": {
            "label": "mapping(uint256 => struct Arena.EventInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(BetInfo)2992_storage": {
            "label": "struct Arena.BetInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)4971",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cardOwner",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "betId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(CallInfo)3006_storage": {
            "label": "struct Arena.CallInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)4971",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "firstParticipantAddress",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "firstParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "secondParticipantAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "secondParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(EventInfo)2982_storage": {
            "label": "struct Arena.EventInfo",
            "members": [
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "descriptionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "result",
                "type": "t_enum(MatchResult)4971",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0c332f04639729e1db90738aef6ec4d05a5ec283b15836558620f72e008dcb78": {
      "address": "0xEBc44EBF365aAC527f632D77Bae00dF06cB223bF",
      "txHash": "0xd0421ffc1088bcbb2d0d2c9584165af7a6fb7209a47fd388d6180713c7fa4c1f",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_arenaAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IArena)6256",
            "contract": "Card",
            "src": "contracts/Card.sol:25"
          },
          {
            "label": "_lastMint",
            "offset": 0,
            "slot": "252",
            "type": "t_struct(Counter)3292_storage",
            "contract": "Card",
            "src": "contracts/Card.sol:26"
          },
          {
            "label": "_acceptedCurrency",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IERC20Upgradeable)1399",
            "contract": "Card",
            "src": "contracts/Card.sol:27"
          },
          {
            "label": "_prices",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_enum(CardRarity)6267,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:28"
          },
          {
            "label": "_upgradePrices",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_enum(CardRarity)6267,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:29"
          },
          {
            "label": "_rarities",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_enum(CardRarity)6267)",
            "contract": "Card",
            "src": "contracts/Card.sol:30"
          },
          {
            "label": "_mintAllowances",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_enum(CardRarity)6267)",
            "contract": "Card",
            "src": "contracts/Card.sol:31"
          },
          {
            "label": "_livesRemaining",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:40"
          },
          {
            "label": "_lastBetsPerformance",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:51"
          },
          {
            "label": "_maintoken",
            "offset": 0,
            "slot": "260",
            "type": "t_contract(MainToken)6353",
            "contract": "Card",
            "src": "contracts/Card.sol:52"
          },
          {
            "label": "_auctionAddress",
            "offset": 0,
            "slot": "261",
            "type": "t_address",
            "contract": "Card",
            "src": "contracts/Card.sol:53"
          },
          {
            "label": "_cardInfos",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_struct(CardInfo)4578_storage)",
            "contract": "Card",
            "src": "contracts/Card.sol:60"
          },
          {
            "label": "_freeMintNonce",
            "offset": 0,
            "slot": "263",
            "type": "t_uint256",
            "contract": "Card",
            "src": "contracts/Card.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IArena)6256": {
            "label": "contract IArena",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1399": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)6353": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)6267": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_enum(CardRarity)6267)": {
            "label": "mapping(address => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(CardRarity)6267,t_uint256)": {
            "label": "mapping(enum ICard.CardRarity => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(CardRarity)6267)": {
            "label": "mapping(uint256 => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CardInfo)4578_storage)": {
            "label": "mapping(uint256 => struct Card.CardInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CardInfo)4578_storage": {
            "label": "struct Card.CardInfo",
            "members": [
              {
                "label": "recoveriesDone",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "frozenUntil",
                "type": "t_uint64",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3292_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f37ad9eb4f7295a60fb43648058f2d90f587788e8d58944592582360d7e6c265": {
      "address": "0xf052B3Bd1EEB59AfDF7Be1bbfd7e18FDf276A6aB",
      "txHash": "0x11b4c00cc0215b860509626df16129a6a3011f2bccd1a74e86b89c9fcf16315b",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "card",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ICard)5104",
            "contract": "Arena",
            "src": "contracts/Arena.sol:40"
          },
          {
            "label": "eventInfos",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(EventInfo)2982_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:41"
          },
          {
            "label": "bets",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_struct(BetInfo)2992_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:42"
          },
          {
            "label": "betsByUser",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:43"
          },
          {
            "label": "rarities",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)5074)dyn_storage))",
            "contract": "Arena",
            "src": "contracts/Arena.sol:44"
          },
          {
            "label": "maintoken",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(MainToken)5160",
            "contract": "Arena",
            "src": "contracts/Arena.sol:45"
          },
          {
            "label": "calls",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_struct(CallInfo)3006_storage)dyn_storage",
            "contract": "Arena",
            "src": "contracts/Arena.sol:47"
          },
          {
            "label": "_betId",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "Arena",
            "src": "contracts/Arena.sol:48"
          },
          {
            "label": "callsByUser",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_enum(CardRarity)5074)dyn_storage": {
            "label": "enum ICard.CardRarity[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(CallInfo)3006_storage)dyn_storage": {
            "label": "struct Arena.CallInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICard)5104": {
            "label": "contract ICard",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)5160": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)5074": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(MatchResult)5004": {
            "label": "enum IArena.MatchResult",
            "members": [
              "MatchIsInProgress",
              "MatchCancelled",
              "FirstWon",
              "Draw",
              "SecondWon"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)5074)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => enum ICard.CardRarity[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_enum(CardRarity)5074)dyn_storage)": {
            "label": "mapping(uint256 => enum ICard.CardRarity[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BetInfo)2992_storage)": {
            "label": "mapping(uint256 => struct Arena.BetInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(EventInfo)2982_storage)": {
            "label": "mapping(uint256 => struct Arena.EventInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(BetInfo)2992_storage": {
            "label": "struct Arena.BetInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)5004",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cardOwner",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "betId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(CallInfo)3006_storage": {
            "label": "struct Arena.CallInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)5004",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "firstParticipantAddress",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "firstParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "secondParticipantAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "secondParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(EventInfo)2982_storage": {
            "label": "struct Arena.EventInfo",
            "members": [
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "descriptionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "result",
                "type": "t_enum(MatchResult)5004",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1d64f18bc6b543e1893ecd63db907de237b48ff4bffc0442973ecea25f374e71": {
      "address": "0xdd1bB52C57dBF41fde203Dcbb43CCBFdabE5307A",
      "txHash": "0xf632476dde8ddab04bde113fb2ef3227cc1a76011ec8da5b4f850525c8cb25de",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8d07279c3b22d560a0fd3641cd1b79afd40c2f9e558e57e3507339005057e792": {
      "address": "0x61D7886e530E184b5E99A8234B0c92604dA17883",
      "txHash": "0xb63104aea81185ce86adb7de7e7d631be180c307c1ca1f5104ae516d7266234e",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "card",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ICard)5093",
            "contract": "Arena",
            "src": "contracts/Arena.sol:41"
          },
          {
            "label": "eventInfos",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(EventInfo)2982_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:42"
          },
          {
            "label": "bets",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_struct(BetInfo)2992_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:43"
          },
          {
            "label": "betsByUser",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:44"
          },
          {
            "label": "rarities",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)5063)dyn_storage))",
            "contract": "Arena",
            "src": "contracts/Arena.sol:45"
          },
          {
            "label": "maintoken",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(MainToken)5149",
            "contract": "Arena",
            "src": "contracts/Arena.sol:46"
          },
          {
            "label": "calls",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_struct(CallInfo)3006_storage)dyn_storage",
            "contract": "Arena",
            "src": "contracts/Arena.sol:48"
          },
          {
            "label": "_betId",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "Arena",
            "src": "contracts/Arena.sol:49"
          },
          {
            "label": "callsByUser",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_enum(CardRarity)5063)dyn_storage": {
            "label": "enum ICard.CardRarity[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(CallInfo)3006_storage)dyn_storage": {
            "label": "struct Arena.CallInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICard)5093": {
            "label": "contract ICard",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)5149": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)5063": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(MatchResult)4993": {
            "label": "enum IArena.MatchResult",
            "members": [
              "MatchIsInProgress",
              "MatchCancelled",
              "FirstWon",
              "Draw",
              "SecondWon"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)5063)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => enum ICard.CardRarity[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_enum(CardRarity)5063)dyn_storage)": {
            "label": "mapping(uint256 => enum ICard.CardRarity[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BetInfo)2992_storage)": {
            "label": "mapping(uint256 => struct Arena.BetInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(EventInfo)2982_storage)": {
            "label": "mapping(uint256 => struct Arena.EventInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(BetInfo)2992_storage": {
            "label": "struct Arena.BetInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)4993",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cardOwner",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "betId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(CallInfo)3006_storage": {
            "label": "struct Arena.CallInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)4993",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "firstParticipantAddress",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "firstParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "secondParticipantAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "secondParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(EventInfo)2982_storage": {
            "label": "struct Arena.EventInfo",
            "members": [
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "descriptionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "result",
                "type": "t_enum(MatchResult)4993",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "25c761d5e03c0affb330435c94c3d9d66d4a49d542ddd3519418d7af16701da2": {
      "address": "0x65Ac307700cC4A74f64CC19B565ce0b07D5b9cB0",
      "txHash": "0x4a1eead9da004a9d9b6419c1e1f05d71e89af2813b2048d60b58bf0769a46c73",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_arenaAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IArena)8743",
            "contract": "Card",
            "src": "contracts/Card.sol:25"
          },
          {
            "label": "_lastMint",
            "offset": 0,
            "slot": "252",
            "type": "t_struct(Counter)3446_storage",
            "contract": "Card",
            "src": "contracts/Card.sol:26"
          },
          {
            "label": "_acceptedCurrency",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IERC20Upgradeable)1553",
            "contract": "Card",
            "src": "contracts/Card.sol:27"
          },
          {
            "label": "_prices",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_enum(CardRarity)8754,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:28"
          },
          {
            "label": "_upgradePrices",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_enum(CardRarity)8754,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:29"
          },
          {
            "label": "_rarities",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_enum(CardRarity)8754)",
            "contract": "Card",
            "src": "contracts/Card.sol:30"
          },
          {
            "label": "_mintAllowances",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_enum(CardRarity)8754)",
            "contract": "Card",
            "src": "contracts/Card.sol:31"
          },
          {
            "label": "_livesRemaining",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:40"
          },
          {
            "label": "_lastBetsPerformance",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:51"
          },
          {
            "label": "_maintoken",
            "offset": 0,
            "slot": "260",
            "type": "t_contract(MainToken)9215",
            "contract": "Card",
            "src": "contracts/Card.sol:52"
          },
          {
            "label": "_auctionAddress",
            "offset": 0,
            "slot": "261",
            "type": "t_address",
            "contract": "Card",
            "src": "contracts/Card.sol:53"
          },
          {
            "label": "_cardInfos",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_struct(CardInfo)7065_storage)",
            "contract": "Card",
            "src": "contracts/Card.sol:60"
          },
          {
            "label": "_freeMintNonce",
            "offset": 0,
            "slot": "263",
            "type": "t_uint256",
            "contract": "Card",
            "src": "contracts/Card.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IArena)8743": {
            "label": "contract IArena",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1553": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)9215": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)8754": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_enum(CardRarity)8754)": {
            "label": "mapping(address => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(CardRarity)8754,t_uint256)": {
            "label": "mapping(enum ICard.CardRarity => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(CardRarity)8754)": {
            "label": "mapping(uint256 => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CardInfo)7065_storage)": {
            "label": "mapping(uint256 => struct Card.CardInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CardInfo)7065_storage": {
            "label": "struct Card.CardInfo",
            "members": [
              {
                "label": "recoveriesDone",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "frozenUntil",
                "type": "t_uint64",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3446_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "76234e3959aa9921d6bcc36239500108f81a53b8d4952c6332fdd61968f127ef": {
      "address": "0xDb172cBAd8cE30803739Ab4b39F6BA55f59efD7c",
      "txHash": "0x6d5276b5cae9c6c582d82bc0a8c30636a9a56cde27b103997a1cc4808482c729",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "card",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ICard)5126",
            "contract": "Arena",
            "src": "contracts/Arena.sol:41"
          },
          {
            "label": "eventInfos",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(EventInfo)2982_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:42"
          },
          {
            "label": "bets",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_struct(BetInfo)2992_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:43"
          },
          {
            "label": "betsByUser",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:44"
          },
          {
            "label": "rarities",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)5096)dyn_storage))",
            "contract": "Arena",
            "src": "contracts/Arena.sol:45"
          },
          {
            "label": "maintoken",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(MainToken)5182",
            "contract": "Arena",
            "src": "contracts/Arena.sol:46"
          },
          {
            "label": "calls",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_struct(CallInfo)3006_storage)dyn_storage",
            "contract": "Arena",
            "src": "contracts/Arena.sol:48"
          },
          {
            "label": "_betId",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "Arena",
            "src": "contracts/Arena.sol:49"
          },
          {
            "label": "callsByUser",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_enum(CardRarity)5096)dyn_storage": {
            "label": "enum ICard.CardRarity[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(CallInfo)3006_storage)dyn_storage": {
            "label": "struct Arena.CallInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICard)5126": {
            "label": "contract ICard",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)5182": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)5096": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(MatchResult)5026": {
            "label": "enum IArena.MatchResult",
            "members": [
              "MatchIsInProgress",
              "MatchCancelled",
              "FirstWon",
              "Draw",
              "SecondWon"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)5096)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => enum ICard.CardRarity[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_enum(CardRarity)5096)dyn_storage)": {
            "label": "mapping(uint256 => enum ICard.CardRarity[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BetInfo)2992_storage)": {
            "label": "mapping(uint256 => struct Arena.BetInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(EventInfo)2982_storage)": {
            "label": "mapping(uint256 => struct Arena.EventInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(BetInfo)2992_storage": {
            "label": "struct Arena.BetInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)5026",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cardOwner",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "betId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(CallInfo)3006_storage": {
            "label": "struct Arena.CallInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)5026",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "firstParticipantAddress",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "firstParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "secondParticipantAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "secondParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(EventInfo)2982_storage": {
            "label": "struct Arena.EventInfo",
            "members": [
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "descriptionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "result",
                "type": "t_enum(MatchResult)5026",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4bbadf509edc61898d4c4492be35bc39577079f7ace0eab4279571305c0bcca6": {
      "address": "0xccD6472F058f0f6c9506870D870789379c27ad1A",
      "txHash": "0xbdf6b57b9c432eb3cb73ab527f3bdf8ce54dd777745ff88f76e059d793d79348",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "card",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ICard)5126",
            "contract": "Arena",
            "src": "contracts/Arena.sol:41"
          },
          {
            "label": "eventInfos",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(EventInfo)2982_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:42"
          },
          {
            "label": "bets",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_struct(BetInfo)2992_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:43"
          },
          {
            "label": "betsByUser",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:44"
          },
          {
            "label": "rarities",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)5096)dyn_storage))",
            "contract": "Arena",
            "src": "contracts/Arena.sol:45"
          },
          {
            "label": "maintoken",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(MainToken)5182",
            "contract": "Arena",
            "src": "contracts/Arena.sol:46"
          },
          {
            "label": "calls",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_struct(CallInfo)3006_storage)dyn_storage",
            "contract": "Arena",
            "src": "contracts/Arena.sol:48"
          },
          {
            "label": "_betId",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "Arena",
            "src": "contracts/Arena.sol:49"
          },
          {
            "label": "callsByUser",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_enum(CardRarity)5096)dyn_storage": {
            "label": "enum ICard.CardRarity[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(CallInfo)3006_storage)dyn_storage": {
            "label": "struct Arena.CallInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICard)5126": {
            "label": "contract ICard",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)5182": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)5096": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(MatchResult)5026": {
            "label": "enum IArena.MatchResult",
            "members": [
              "MatchIsInProgress",
              "MatchCancelled",
              "FirstWon",
              "Draw",
              "SecondWon"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)5096)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => enum ICard.CardRarity[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_enum(CardRarity)5096)dyn_storage)": {
            "label": "mapping(uint256 => enum ICard.CardRarity[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BetInfo)2992_storage)": {
            "label": "mapping(uint256 => struct Arena.BetInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(EventInfo)2982_storage)": {
            "label": "mapping(uint256 => struct Arena.EventInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(BetInfo)2992_storage": {
            "label": "struct Arena.BetInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)5026",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cardOwner",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "betId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(CallInfo)3006_storage": {
            "label": "struct Arena.CallInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)5026",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "firstParticipantAddress",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "firstParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "secondParticipantAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "secondParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(EventInfo)2982_storage": {
            "label": "struct Arena.EventInfo",
            "members": [
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "descriptionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "result",
                "type": "t_enum(MatchResult)5026",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "fba76df51a8b3fc73bf2685784e12918e8d9bf613c598545b232b8d404ac3931": {
      "address": "0x32be3453fc768830D4d8D4B6f053aA2251F6a2a3",
      "txHash": "0x480cfaa80e9d78544df03917a7e1af8d23b8f400be340bbc27b2cb9f3af93168",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "card",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ICard)5134",
            "contract": "Arena",
            "src": "contracts/Arena.sol:41"
          },
          {
            "label": "eventInfos",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(EventInfo)2982_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:42"
          },
          {
            "label": "bets",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_struct(BetInfo)2992_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:43"
          },
          {
            "label": "betsByUser",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:44"
          },
          {
            "label": "rarities",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)5104)dyn_storage))",
            "contract": "Arena",
            "src": "contracts/Arena.sol:45"
          },
          {
            "label": "maintoken",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(MainToken)5190",
            "contract": "Arena",
            "src": "contracts/Arena.sol:46"
          },
          {
            "label": "calls",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_struct(CallInfo)3006_storage)dyn_storage",
            "contract": "Arena",
            "src": "contracts/Arena.sol:48"
          },
          {
            "label": "_betId",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "Arena",
            "src": "contracts/Arena.sol:49"
          },
          {
            "label": "callsByUser",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_enum(CardRarity)5104)dyn_storage": {
            "label": "enum ICard.CardRarity[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(CallInfo)3006_storage)dyn_storage": {
            "label": "struct Arena.CallInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICard)5134": {
            "label": "contract ICard",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)5190": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)5104": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(MatchResult)5034": {
            "label": "enum IArena.MatchResult",
            "members": [
              "MatchIsInProgress",
              "MatchCancelled",
              "FirstWon",
              "Draw",
              "SecondWon"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)5104)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => enum ICard.CardRarity[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_enum(CardRarity)5104)dyn_storage)": {
            "label": "mapping(uint256 => enum ICard.CardRarity[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BetInfo)2992_storage)": {
            "label": "mapping(uint256 => struct Arena.BetInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(EventInfo)2982_storage)": {
            "label": "mapping(uint256 => struct Arena.EventInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(BetInfo)2992_storage": {
            "label": "struct Arena.BetInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)5034",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cardOwner",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "betId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(CallInfo)3006_storage": {
            "label": "struct Arena.CallInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)5034",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "firstParticipantAddress",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "firstParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "secondParticipantAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "secondParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(EventInfo)2982_storage": {
            "label": "struct Arena.EventInfo",
            "members": [
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "descriptionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "result",
                "type": "t_enum(MatchResult)5034",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ee9b1581ac1efdbbb3d26853222c1c7fb2561879dadce2d73ed0dc428e47b0b4": {
      "address": "0xB224197F8ef8333745e3068f932cFaE035dD6b50",
      "txHash": "0x17daf63be633c907b25d0e22b82808c96491cd575f04a1104d1220eca554130b",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "card",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ICard)5061",
            "contract": "Arena",
            "src": "contracts/Arena.sol:41"
          },
          {
            "label": "eventInfos",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(EventInfo)2982_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:42"
          },
          {
            "label": "bets",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_struct(BetInfo)2992_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:43"
          },
          {
            "label": "betsByUser",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:44"
          },
          {
            "label": "rarities",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)5031)dyn_storage))",
            "contract": "Arena",
            "src": "contracts/Arena.sol:45"
          },
          {
            "label": "maintoken",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(MainToken)5117",
            "contract": "Arena",
            "src": "contracts/Arena.sol:46"
          },
          {
            "label": "calls",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_struct(CallInfo)3006_storage)dyn_storage",
            "contract": "Arena",
            "src": "contracts/Arena.sol:48"
          },
          {
            "label": "_betId",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "Arena",
            "src": "contracts/Arena.sol:49"
          },
          {
            "label": "callsByUser",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_enum(CardRarity)5031)dyn_storage": {
            "label": "enum ICard.CardRarity[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(CallInfo)3006_storage)dyn_storage": {
            "label": "struct Arena.CallInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICard)5061": {
            "label": "contract ICard",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)5117": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)5031": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(MatchResult)4961": {
            "label": "enum IArena.MatchResult",
            "members": [
              "MatchIsInProgress",
              "MatchCancelled",
              "FirstWon",
              "Draw",
              "SecondWon"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)5031)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => enum ICard.CardRarity[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_enum(CardRarity)5031)dyn_storage)": {
            "label": "mapping(uint256 => enum ICard.CardRarity[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BetInfo)2992_storage)": {
            "label": "mapping(uint256 => struct Arena.BetInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(EventInfo)2982_storage)": {
            "label": "mapping(uint256 => struct Arena.EventInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(BetInfo)2992_storage": {
            "label": "struct Arena.BetInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)4961",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cardOwner",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "betId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(CallInfo)3006_storage": {
            "label": "struct Arena.CallInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)4961",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "firstParticipantAddress",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "firstParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "secondParticipantAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "secondParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(EventInfo)2982_storage": {
            "label": "struct Arena.EventInfo",
            "members": [
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "descriptionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "result",
                "type": "t_enum(MatchResult)4961",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "02474264f7cb0e574c62460d8bc193c3b9f9984bf8370ac6a80583e9387afcb5": {
      "address": "0x4d11F667C5952cAe1133d7ca53418eC396bB62Cf",
      "txHash": "0x0f222fc29b8601d761c9e7584c497cd0d4752dcb6692ed81368b79d0ed1dca19",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "bets",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_struct(AuctionInfo)11396_storage)",
            "contract": "Auction",
            "src": "contracts/oldAuction.sol:25"
          },
          {
            "label": "auctionsByUser",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Auction",
            "src": "contracts/oldAuction.sol:26"
          },
          {
            "label": "card",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(Card)10828",
            "contract": "Auction",
            "src": "contracts/oldAuction.sol:27"
          },
          {
            "label": "maintoken",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(MainToken)11367",
            "contract": "Auction",
            "src": "contracts/oldAuction.sol:28"
          },
          {
            "label": "myBets",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_array(t_struct(MyBet)11405_storage)dyn_storage)",
            "contract": "Auction",
            "src": "contracts/oldAuction.sol:29"
          },
          {
            "label": "_commission",
            "offset": 0,
            "slot": "106",
            "type": "t_uint8",
            "contract": "Auction",
            "src": "contracts/oldAuction.sol:30"
          },
          {
            "label": "auctionId",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "Auction",
            "src": "contracts/oldAuction.sol:31"
          },
          {
            "label": "auctionIdByCardId",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Auction",
            "src": "contracts/oldAuction.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(MyBet)11405_storage)dyn_storage": {
            "label": "struct Auction.MyBet[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Card)10828": {
            "label": "contract Card",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)11367": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(MyBet)11405_storage)dyn_storage)": {
            "label": "mapping(address => struct Auction.MyBet[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AuctionInfo)11396_storage)": {
            "label": "mapping(uint256 => struct Auction.AuctionInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AuctionInfo)11396_storage": {
            "label": "struct Auction.AuctionInfo",
            "members": [
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bestBet",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "bestBettor",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(MyBet)11405_storage": {
            "label": "struct Auction.MyBet",
            "members": [
              {
                "label": "cardId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "776d934ee433e3de63727f7c2b8fb9102ed32a9df89f8241b7c2a8c11b840b4e": {
      "address": "0x3359F5A9127bCB7dC9aa0142AE5af714B30Fbf31",
      "txHash": "0xb6663ad38410bcd4e2d49805e0d336888596bcb8c6f7966cf12eae8878a10992",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "bets",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_struct(AuctionInfo)4485_storage)",
            "contract": "AuctionCoreUpgdaeable",
            "src": "contracts/Auction.sol:25"
          },
          {
            "label": "auctionsByUser",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "AuctionCoreUpgdaeable",
            "src": "contracts/Auction.sol:26"
          },
          {
            "label": "card",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(Card)7207",
            "contract": "AuctionCoreUpgdaeable",
            "src": "contracts/Auction.sol:27"
          },
          {
            "label": "myBets",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_array(t_struct(MyBet)4494_storage)dyn_storage)",
            "contract": "AuctionCoreUpgdaeable",
            "src": "contracts/Auction.sol:29"
          },
          {
            "label": "_commission",
            "offset": 0,
            "slot": "105",
            "type": "t_uint8",
            "contract": "AuctionCoreUpgdaeable",
            "src": "contracts/Auction.sol:30"
          },
          {
            "label": "auctionId",
            "offset": 0,
            "slot": "106",
            "type": "t_uint256",
            "contract": "AuctionCoreUpgdaeable",
            "src": "contracts/Auction.sol:31"
          },
          {
            "label": "auctionIdByCardId",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "AuctionCoreUpgdaeable",
            "src": "contracts/Auction.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "108",
            "type": "t_array(t_uint256)47_storage",
            "contract": "AuctionCoreUpgdaeable",
            "src": "contracts/Auction.sol:167"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(MyBet)4494_storage)dyn_storage": {
            "label": "struct AuctionCoreUpgdaeable.MyBet[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Card)7207": {
            "label": "contract Card",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(MyBet)4494_storage)dyn_storage)": {
            "label": "mapping(address => struct AuctionCoreUpgdaeable.MyBet[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AuctionInfo)4485_storage)": {
            "label": "mapping(uint256 => struct AuctionCoreUpgdaeable.AuctionInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AuctionInfo)4485_storage": {
            "label": "struct AuctionCoreUpgdaeable.AuctionInfo",
            "members": [
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bestBet",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "bestBettor",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(MyBet)4494_storage": {
            "label": "struct AuctionCoreUpgdaeable.MyBet",
            "members": [
              {
                "label": "cardId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "df5122528149d188bc2bb0eb9e51c1ea96cc6c3592383f68634c926bf9971a72": {
      "address": "0x905EC33f7CbD8C20b0e508E6823d8725688C4D5B",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "card",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ICard)5113",
            "contract": "Arena",
            "src": "contracts/Arena.sol:65"
          },
          {
            "label": "eventInfos",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(EventInfo)2982_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:66"
          },
          {
            "label": "bets",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_struct(BetInfo)2992_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:67"
          },
          {
            "label": "betsByUser",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:68"
          },
          {
            "label": "rarities",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)5083)dyn_storage))",
            "contract": "Arena",
            "src": "contracts/Arena.sol:69"
          },
          {
            "label": "maintoken",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(MainToken)5169",
            "contract": "Arena",
            "src": "contracts/Arena.sol:70"
          },
          {
            "label": "calls",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_struct(CallInfo)3006_storage)dyn_storage",
            "contract": "Arena",
            "src": "contracts/Arena.sol:72"
          },
          {
            "label": "_betId",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "Arena",
            "src": "contracts/Arena.sol:73"
          },
          {
            "label": "callsByUser",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:74"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_enum(CardRarity)5083)dyn_storage": {
            "label": "enum ICard.CardRarity[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(CallInfo)3006_storage)dyn_storage": {
            "label": "struct Arena.CallInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICard)5113": {
            "label": "contract ICard",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)5169": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)5083": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(MatchResult)5013": {
            "label": "enum IArena.MatchResult",
            "members": [
              "MatchIsInProgress",
              "MatchCancelled",
              "FirstWon",
              "Draw",
              "SecondWon"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)5083)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => enum ICard.CardRarity[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_enum(CardRarity)5083)dyn_storage)": {
            "label": "mapping(uint256 => enum ICard.CardRarity[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BetInfo)2992_storage)": {
            "label": "mapping(uint256 => struct Arena.BetInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(EventInfo)2982_storage)": {
            "label": "mapping(uint256 => struct Arena.EventInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(BetInfo)2992_storage": {
            "label": "struct Arena.BetInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)5013",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cardOwner",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "betId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(CallInfo)3006_storage": {
            "label": "struct Arena.CallInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)5013",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "firstParticipantAddress",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "firstParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "secondParticipantAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "secondParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(EventInfo)2982_storage": {
            "label": "struct Arena.EventInfo",
            "members": [
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "descriptionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "result",
                "type": "t_enum(MatchResult)5013",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4e614690b1261ff350a1fc225cf05cb4be667eb8a8746cf5a30e1e287aa1d98a": {
      "address": "0xeD12F4CC8925336763bBb7D2e0b5ff5EFf7429Be",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_arenaAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IArena)8774",
            "contract": "Card",
            "src": "contracts/Card.sol:25"
          },
          {
            "label": "_lastMint",
            "offset": 0,
            "slot": "252",
            "type": "t_struct(Counter)3446_storage",
            "contract": "Card",
            "src": "contracts/Card.sol:26"
          },
          {
            "label": "_acceptedCurrency",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IERC20Upgradeable)1553",
            "contract": "Card",
            "src": "contracts/Card.sol:27"
          },
          {
            "label": "_prices",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_enum(CardRarity)8785,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:28"
          },
          {
            "label": "_upgradePrices",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_enum(CardRarity)8785,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:29"
          },
          {
            "label": "_rarities",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_enum(CardRarity)8785)",
            "contract": "Card",
            "src": "contracts/Card.sol:30"
          },
          {
            "label": "_mintAllowances",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_enum(CardRarity)8785)",
            "contract": "Card",
            "src": "contracts/Card.sol:31"
          },
          {
            "label": "_livesRemaining",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:40"
          },
          {
            "label": "_lastBetsPerformance",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:51"
          },
          {
            "label": "_maintoken",
            "offset": 0,
            "slot": "260",
            "type": "t_contract(MainToken)9246",
            "contract": "Card",
            "src": "contracts/Card.sol:52"
          },
          {
            "label": "_auctionAddress",
            "offset": 0,
            "slot": "261",
            "type": "t_address",
            "contract": "Card",
            "src": "contracts/Card.sol:53"
          },
          {
            "label": "_cardInfos",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_struct(CardInfo)7107_storage)",
            "contract": "Card",
            "src": "contracts/Card.sol:60"
          },
          {
            "label": "_freeMintNonce",
            "offset": 0,
            "slot": "263",
            "type": "t_uint256",
            "contract": "Card",
            "src": "contracts/Card.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IArena)8774": {
            "label": "contract IArena",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1553": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)9246": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)8785": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_enum(CardRarity)8785)": {
            "label": "mapping(address => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(CardRarity)8785,t_uint256)": {
            "label": "mapping(enum ICard.CardRarity => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(CardRarity)8785)": {
            "label": "mapping(uint256 => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CardInfo)7107_storage)": {
            "label": "mapping(uint256 => struct Card.CardInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CardInfo)7107_storage": {
            "label": "struct Card.CardInfo",
            "members": [
              {
                "label": "recoveriesDone",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "frozenUntil",
                "type": "t_uint64",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3446_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f5ac43ff0456fd0fffc4c796e1849bcf9da989bb4bf65ee9a8f916c0635ff9aa": {
      "address": "0x21ABC5C145c26dC7c6026AA2793F8a3044c7f922",
      "txHash": "0x45c5e719401e7b37ee953cfc41189c43ec175a620e664a708b0bb1d73aaee2b8",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_arenaAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IArena)6113",
            "contract": "Card",
            "src": "contracts/Card.sol:25"
          },
          {
            "label": "_lastMint",
            "offset": 0,
            "slot": "252",
            "type": "t_struct(Counter)3160_storage",
            "contract": "Card",
            "src": "contracts/Card.sol:26"
          },
          {
            "label": "_acceptedCurrency",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IERC20Upgradeable)1267",
            "contract": "Card",
            "src": "contracts/Card.sol:27"
          },
          {
            "label": "_prices",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_enum(CardRarity)6124,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:28"
          },
          {
            "label": "_upgradePrices",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_enum(CardRarity)6124,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:29"
          },
          {
            "label": "_rarities",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_enum(CardRarity)6124)",
            "contract": "Card",
            "src": "contracts/Card.sol:30"
          },
          {
            "label": "_mintAllowances",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_enum(CardRarity)6124)",
            "contract": "Card",
            "src": "contracts/Card.sol:31"
          },
          {
            "label": "_livesRemaining",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:40"
          },
          {
            "label": "_lastBetsPerformance",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:51"
          },
          {
            "label": "_maintoken",
            "offset": 0,
            "slot": "260",
            "type": "t_contract(MainToken)6210",
            "contract": "Card",
            "src": "contracts/Card.sol:52"
          },
          {
            "label": "_auctionAddress",
            "offset": 0,
            "slot": "261",
            "type": "t_address",
            "contract": "Card",
            "src": "contracts/Card.sol:53"
          },
          {
            "label": "_cardInfos",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_struct(CardInfo)4446_storage)",
            "contract": "Card",
            "src": "contracts/Card.sol:60"
          },
          {
            "label": "_freeMintNonce",
            "offset": 0,
            "slot": "263",
            "type": "t_uint256",
            "contract": "Card",
            "src": "contracts/Card.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IArena)6113": {
            "label": "contract IArena",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1267": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)6210": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)6124": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_enum(CardRarity)6124)": {
            "label": "mapping(address => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(CardRarity)6124,t_uint256)": {
            "label": "mapping(enum ICard.CardRarity => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(CardRarity)6124)": {
            "label": "mapping(uint256 => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CardInfo)4446_storage)": {
            "label": "mapping(uint256 => struct Card.CardInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CardInfo)4446_storage": {
            "label": "struct Card.CardInfo",
            "members": [
              {
                "label": "recoveriesDone",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "frozenUntil",
                "type": "t_uint64",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3160_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e0ab21733e80dd4762f38f7b6d0df0a5f0130099484f88e13eb379d5ba4553ea": {
      "address": "0x1bBa9399D7dd9E955FdD33762d9B8fddbb961D2b",
      "txHash": "0x94ba3ff64ddd87b61f506e760909e481d41c635ba31ebc2773ac3afa5a1127b0",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_arenaAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IArena)6253",
            "contract": "Card",
            "src": "contracts/Card.sol:25"
          },
          {
            "label": "_lastMint",
            "offset": 0,
            "slot": "252",
            "type": "t_struct(Counter)3292_storage",
            "contract": "Card",
            "src": "contracts/Card.sol:26"
          },
          {
            "label": "_acceptedCurrency",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IERC20Upgradeable)1399",
            "contract": "Card",
            "src": "contracts/Card.sol:27"
          },
          {
            "label": "_prices",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_enum(CardRarity)6264,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:28"
          },
          {
            "label": "_upgradePrices",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_enum(CardRarity)6264,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:29"
          },
          {
            "label": "_rarities",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_enum(CardRarity)6264)",
            "contract": "Card",
            "src": "contracts/Card.sol:30"
          },
          {
            "label": "_mintAllowances",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_enum(CardRarity)6264)",
            "contract": "Card",
            "src": "contracts/Card.sol:31"
          },
          {
            "label": "_livesRemaining",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:40"
          },
          {
            "label": "_lastBetsPerformance",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:51"
          },
          {
            "label": "_maintoken",
            "offset": 0,
            "slot": "260",
            "type": "t_contract(MainToken)6354",
            "contract": "Card",
            "src": "contracts/Card.sol:52"
          },
          {
            "label": "_auctionAddress",
            "offset": 0,
            "slot": "261",
            "type": "t_address",
            "contract": "Card",
            "src": "contracts/Card.sol:53"
          },
          {
            "label": "_cardInfos",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_struct(CardInfo)4578_storage)",
            "contract": "Card",
            "src": "contracts/Card.sol:60"
          },
          {
            "label": "_freeMintNonce",
            "offset": 0,
            "slot": "263",
            "type": "t_uint256",
            "contract": "Card",
            "src": "contracts/Card.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IArena)6253": {
            "label": "contract IArena",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1399": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)6354": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)6264": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_enum(CardRarity)6264)": {
            "label": "mapping(address => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(CardRarity)6264,t_uint256)": {
            "label": "mapping(enum ICard.CardRarity => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(CardRarity)6264)": {
            "label": "mapping(uint256 => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CardInfo)4578_storage)": {
            "label": "mapping(uint256 => struct Card.CardInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CardInfo)4578_storage": {
            "label": "struct Card.CardInfo",
            "members": [
              {
                "label": "recoveriesDone",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "frozenUntil",
                "type": "t_uint64",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3292_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d3b6aa13f83637ddb0a7adaf0343562b58fbfaed095b381327873afc1b7b7d07": {
      "address": "0x6786f0559506B9f9aA11eF028982186285Ef99c3",
      "txHash": "0x9492ab92a178142bc666521e9e5fc17d270c6daaf1927f50e67db963fe0c507d",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "bets",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_struct(AuctionInfo)11623_storage)",
            "contract": "Auction",
            "src": "contracts/oldAuction.sol:25"
          },
          {
            "label": "auctionsByUser",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Auction",
            "src": "contracts/oldAuction.sol:26"
          },
          {
            "label": "card",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(Card)11051",
            "contract": "Auction",
            "src": "contracts/oldAuction.sol:27"
          },
          {
            "label": "maintoken",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(MainToken)11594",
            "contract": "Auction",
            "src": "contracts/oldAuction.sol:28"
          },
          {
            "label": "myBets",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_array(t_struct(MyBet)11632_storage)dyn_storage)",
            "contract": "Auction",
            "src": "contracts/oldAuction.sol:29"
          },
          {
            "label": "_commission",
            "offset": 0,
            "slot": "106",
            "type": "t_uint8",
            "contract": "Auction",
            "src": "contracts/oldAuction.sol:30"
          },
          {
            "label": "auctionId",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "Auction",
            "src": "contracts/oldAuction.sol:31"
          },
          {
            "label": "auctionIdByCardId",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Auction",
            "src": "contracts/oldAuction.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(MyBet)11632_storage)dyn_storage": {
            "label": "struct Auction.MyBet[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Card)11051": {
            "label": "contract Card",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)11594": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(MyBet)11632_storage)dyn_storage)": {
            "label": "mapping(address => struct Auction.MyBet[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AuctionInfo)11623_storage)": {
            "label": "mapping(uint256 => struct Auction.AuctionInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AuctionInfo)11623_storage": {
            "label": "struct Auction.AuctionInfo",
            "members": [
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bestBet",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "bestBettor",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(MyBet)11632_storage": {
            "label": "struct Auction.MyBet",
            "members": [
              {
                "label": "cardId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bc601daecad7d7c77340adfcc7aa070b4bcfd1bee7854b7def553d938dc66fb2": {
      "address": "0x0292d48cF5f762a20e73689a6BBD8BC97419F151",
      "txHash": "0x89618c6ff6d7c408595a2113905d3d7a9e1b061f4f8363ae6cad6904bb5d1482",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "card",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ICard)5265",
            "contract": "Arena",
            "src": "contracts/Arena.sol:65"
          },
          {
            "label": "eventInfos",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(EventInfo)2982_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:66"
          },
          {
            "label": "bets",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_struct(BetInfo)2992_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:67"
          },
          {
            "label": "betsByUser",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:68"
          },
          {
            "label": "rarities",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)5235)dyn_storage))",
            "contract": "Arena",
            "src": "contracts/Arena.sol:69"
          },
          {
            "label": "maintoken",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(MainToken)5321",
            "contract": "Arena",
            "src": "contracts/Arena.sol:70"
          },
          {
            "label": "calls",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_struct(CallInfo)3006_storage)dyn_storage",
            "contract": "Arena",
            "src": "contracts/Arena.sol:72"
          },
          {
            "label": "_betId",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "Arena",
            "src": "contracts/Arena.sol:73"
          },
          {
            "label": "callsByUser",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:74"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_enum(CardRarity)5235)dyn_storage": {
            "label": "enum ICard.CardRarity[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(CallInfo)3006_storage)dyn_storage": {
            "label": "struct Arena.CallInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICard)5265": {
            "label": "contract ICard",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)5321": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)5235": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(MatchResult)5165": {
            "label": "enum IArena.MatchResult",
            "members": [
              "MatchIsInProgress",
              "MatchCancelled",
              "FirstWon",
              "Draw",
              "SecondWon"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)5235)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => enum ICard.CardRarity[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_enum(CardRarity)5235)dyn_storage)": {
            "label": "mapping(uint256 => enum ICard.CardRarity[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BetInfo)2992_storage)": {
            "label": "mapping(uint256 => struct Arena.BetInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(EventInfo)2982_storage)": {
            "label": "mapping(uint256 => struct Arena.EventInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(BetInfo)2992_storage": {
            "label": "struct Arena.BetInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)5165",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cardOwner",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "betId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(CallInfo)3006_storage": {
            "label": "struct Arena.CallInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)5165",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "firstParticipantAddress",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "firstParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "secondParticipantAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "secondParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(EventInfo)2982_storage": {
            "label": "struct Arena.EventInfo",
            "members": [
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "descriptionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "result",
                "type": "t_enum(MatchResult)5165",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7ecd07adb6edef9d2081814ace05f90e2bdaba4af1f5c3a47f583192da8f911d": {
      "address": "0xA7A782A0F17fBb292dd7E71E53DfdfDA15f9Db04",
      "txHash": "0xe372db925d8fc64d60d71ede3f6bbb710be4a6a05c8a50904324cb70af2b43aa",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "permitOpsCounter",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MainToken",
            "src": "contracts/MainToken.sol:9"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9a629b956558fab5f48c123699ed8889941e0485782da15cbec470635a64d652": {
      "address": "0x07F74b6704E70460F137D8E7a71b5a5608bA29cA",
      "txHash": "0x881ae47f25579191462ca9f2b29f032e583458675eb5df16d00457b2ab0d0117",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_arenaAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IArena)6342",
            "contract": "Card",
            "src": "contracts/Card.sol:25"
          },
          {
            "label": "_lastMint",
            "offset": 0,
            "slot": "252",
            "type": "t_struct(Counter)3292_storage",
            "contract": "Card",
            "src": "contracts/Card.sol:26"
          },
          {
            "label": "_acceptedCurrency",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IERC20Upgradeable)1399",
            "contract": "Card",
            "src": "contracts/Card.sol:27"
          },
          {
            "label": "_prices",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_enum(CardRarity)6353,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:28"
          },
          {
            "label": "_upgradePrices",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_enum(CardRarity)6353,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:29"
          },
          {
            "label": "_rarities",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_enum(CardRarity)6353)",
            "contract": "Card",
            "src": "contracts/Card.sol:30"
          },
          {
            "label": "_mintAllowances",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_enum(CardRarity)6353)",
            "contract": "Card",
            "src": "contracts/Card.sol:31"
          },
          {
            "label": "_livesRemaining",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:40"
          },
          {
            "label": "_lastBetsPerformance",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:51"
          },
          {
            "label": "_maintoken",
            "offset": 0,
            "slot": "260",
            "type": "t_contract(MainToken)6509",
            "contract": "Card",
            "src": "contracts/Card.sol:52"
          },
          {
            "label": "_auctionAddress",
            "offset": 0,
            "slot": "261",
            "type": "t_address",
            "contract": "Card",
            "src": "contracts/Card.sol:53"
          },
          {
            "label": "_cardInfos",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_struct(CardInfo)4578_storage)",
            "contract": "Card",
            "src": "contracts/Card.sol:60"
          },
          {
            "label": "_freeMintNonce",
            "offset": 0,
            "slot": "263",
            "type": "t_uint256",
            "contract": "Card",
            "src": "contracts/Card.sol:61"
          },
          {
            "label": "gasFreeOpCounter",
            "offset": 0,
            "slot": "264",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:62"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IArena)6342": {
            "label": "contract IArena",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1399": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)6509": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)6353": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_enum(CardRarity)6353)": {
            "label": "mapping(address => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(CardRarity)6353,t_uint256)": {
            "label": "mapping(enum ICard.CardRarity => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(CardRarity)6353)": {
            "label": "mapping(uint256 => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CardInfo)4578_storage)": {
            "label": "mapping(uint256 => struct Card.CardInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CardInfo)4578_storage": {
            "label": "struct Card.CardInfo",
            "members": [
              {
                "label": "recoveriesDone",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "frozenUntil",
                "type": "t_uint64",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3292_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "43edda8a8deb5769a8443e05937989565f076ecad40556d8b7b5c97d7ecc2fea": {
      "address": "0xc23c494b62b1491421ece2Dd56b0e2CC57B1072B",
      "txHash": "0x152cd5913fbd5d622aa7e753e0d414628f180bcefc1fc6783b62408c06c8813f",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "bets",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_struct(AuctionInfo)6538_storage)",
            "contract": "Auction",
            "src": "contracts/oldAuction.sol:25"
          },
          {
            "label": "auctionsByUser",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Auction",
            "src": "contracts/oldAuction.sol:26"
          },
          {
            "label": "card",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(Card)6275",
            "contract": "Auction",
            "src": "contracts/oldAuction.sol:27"
          },
          {
            "label": "maintoken",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(MainToken)6509",
            "contract": "Auction",
            "src": "contracts/oldAuction.sol:28"
          },
          {
            "label": "myBets",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_array(t_struct(MyBet)6547_storage)dyn_storage)",
            "contract": "Auction",
            "src": "contracts/oldAuction.sol:29"
          },
          {
            "label": "_commission",
            "offset": 0,
            "slot": "106",
            "type": "t_uint8",
            "contract": "Auction",
            "src": "contracts/oldAuction.sol:30"
          },
          {
            "label": "auctionId",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "Auction",
            "src": "contracts/oldAuction.sol:31"
          },
          {
            "label": "auctionIdByCardId",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Auction",
            "src": "contracts/oldAuction.sol:32"
          },
          {
            "label": "gasFreeOpCounter",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Auction",
            "src": "contracts/oldAuction.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(MyBet)6547_storage)dyn_storage": {
            "label": "struct Auction.MyBet[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Card)6275": {
            "label": "contract Card",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)6509": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(MyBet)6547_storage)dyn_storage)": {
            "label": "mapping(address => struct Auction.MyBet[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AuctionInfo)6538_storage)": {
            "label": "mapping(uint256 => struct Auction.AuctionInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AuctionInfo)6538_storage": {
            "label": "struct Auction.AuctionInfo",
            "members": [
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bestBet",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "bestBettor",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(MyBet)6547_storage": {
            "label": "struct Auction.MyBet",
            "members": [
              {
                "label": "cardId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "79c8e2a9a3df5d1b0a5f139056d02bf084a72694eb04d1d0d44ace98718810f9": {
      "address": "0x0A6eC47c6b0D5AD51af45726201b01f2DB30c34c",
      "txHash": "0x3ead128b3451cce1d8fd6eb371e06e37ca61a46a63cb8263fdadb73698e860f2",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "card",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ICard)5323",
            "contract": "Arena",
            "src": "contracts/Arena.sol:65"
          },
          {
            "label": "eventInfos",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(EventInfo)2982_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:66"
          },
          {
            "label": "bets",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_struct(BetInfo)2992_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:67"
          },
          {
            "label": "betsByUser",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:68"
          },
          {
            "label": "rarities",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)5293)dyn_storage))",
            "contract": "Arena",
            "src": "contracts/Arena.sol:69"
          },
          {
            "label": "maintoken",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(MainToken)5449",
            "contract": "Arena",
            "src": "contracts/Arena.sol:70"
          },
          {
            "label": "calls",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_struct(CallInfo)3006_storage)dyn_storage",
            "contract": "Arena",
            "src": "contracts/Arena.sol:72"
          },
          {
            "label": "_betId",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "Arena",
            "src": "contracts/Arena.sol:73"
          },
          {
            "label": "callsByUser",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:74"
          },
          {
            "label": "gasFreeOpCounter",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:75"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_enum(CardRarity)5293)dyn_storage": {
            "label": "enum ICard.CardRarity[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(CallInfo)3006_storage)dyn_storage": {
            "label": "struct Arena.CallInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICard)5323": {
            "label": "contract ICard",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)5449": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)5293": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(MatchResult)5223": {
            "label": "enum IArena.MatchResult",
            "members": [
              "MatchIsInProgress",
              "MatchCancelled",
              "FirstWon",
              "Draw",
              "SecondWon"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)5293)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => enum ICard.CardRarity[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_enum(CardRarity)5293)dyn_storage)": {
            "label": "mapping(uint256 => enum ICard.CardRarity[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BetInfo)2992_storage)": {
            "label": "mapping(uint256 => struct Arena.BetInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(EventInfo)2982_storage)": {
            "label": "mapping(uint256 => struct Arena.EventInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(BetInfo)2992_storage": {
            "label": "struct Arena.BetInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)5223",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cardOwner",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "betId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(CallInfo)3006_storage": {
            "label": "struct Arena.CallInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)5223",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "firstParticipantAddress",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "firstParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "secondParticipantAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "secondParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(EventInfo)2982_storage": {
            "label": "struct Arena.EventInfo",
            "members": [
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "descriptionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "result",
                "type": "t_enum(MatchResult)5223",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6048815244cc7457053770b7455f0f68c46240422c8cb6e13f80323d0474b782": {
      "address": "0x5c6E98D5F39EC187f3f39E2F50cF8A174abd74da",
      "txHash": "0x65e05c9fa9d4a0a3ecf561e281c6b3d52a25511d5e0cbdfec9000a70a1e14295",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "card",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ICard)5323",
            "contract": "Arena",
            "src": "contracts/Arena.sol:65"
          },
          {
            "label": "eventInfos",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(EventInfo)2982_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:66"
          },
          {
            "label": "bets",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_struct(BetInfo)2992_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:67"
          },
          {
            "label": "betsByUser",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:68"
          },
          {
            "label": "rarities",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)5293)dyn_storage))",
            "contract": "Arena",
            "src": "contracts/Arena.sol:69"
          },
          {
            "label": "maintoken",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(MainToken)5449",
            "contract": "Arena",
            "src": "contracts/Arena.sol:70"
          },
          {
            "label": "calls",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_struct(CallInfo)3006_storage)dyn_storage",
            "contract": "Arena",
            "src": "contracts/Arena.sol:72"
          },
          {
            "label": "_betId",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "Arena",
            "src": "contracts/Arena.sol:73"
          },
          {
            "label": "callsByUser",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:74"
          },
          {
            "label": "gasFreeOpCounter",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:75"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_enum(CardRarity)5293)dyn_storage": {
            "label": "enum ICard.CardRarity[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(CallInfo)3006_storage)dyn_storage": {
            "label": "struct Arena.CallInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICard)5323": {
            "label": "contract ICard",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)5449": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)5293": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(MatchResult)5223": {
            "label": "enum IArena.MatchResult",
            "members": [
              "MatchIsInProgress",
              "MatchCancelled",
              "FirstWon",
              "Draw",
              "SecondWon"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)5293)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => enum ICard.CardRarity[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_enum(CardRarity)5293)dyn_storage)": {
            "label": "mapping(uint256 => enum ICard.CardRarity[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BetInfo)2992_storage)": {
            "label": "mapping(uint256 => struct Arena.BetInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(EventInfo)2982_storage)": {
            "label": "mapping(uint256 => struct Arena.EventInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(BetInfo)2992_storage": {
            "label": "struct Arena.BetInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)5223",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cardOwner",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "betId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(CallInfo)3006_storage": {
            "label": "struct Arena.CallInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)5223",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "firstParticipantAddress",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "firstParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "secondParticipantAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "secondParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(EventInfo)2982_storage": {
            "label": "struct Arena.EventInfo",
            "members": [
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "descriptionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "result",
                "type": "t_enum(MatchResult)5223",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c1aab966d256cbd48f021316a010eef6426864406758677a0d12c1c176e499e9": {
      "address": "0x78070EB97F89cE82908C733D887E03B11A9998c4",
      "txHash": "0xd13d8bc65630ef0609821bc69f8cbb59de9f9a288a4c236553ab6f2a912eb156",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "bets",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_struct(AuctionInfo)7729_storage)",
            "contract": "Auction",
            "src": "contracts/oldAuction.sol:25"
          },
          {
            "label": "auctionsByUser",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Auction",
            "src": "contracts/oldAuction.sol:26"
          },
          {
            "label": "card",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(Card)7466",
            "contract": "Auction",
            "src": "contracts/oldAuction.sol:27"
          },
          {
            "label": "maintoken",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(MainToken)7700",
            "contract": "Auction",
            "src": "contracts/oldAuction.sol:28"
          },
          {
            "label": "myBets",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_array(t_struct(MyBet)7738_storage)dyn_storage)",
            "contract": "Auction",
            "src": "contracts/oldAuction.sol:29"
          },
          {
            "label": "_commission",
            "offset": 0,
            "slot": "106",
            "type": "t_uint8",
            "contract": "Auction",
            "src": "contracts/oldAuction.sol:30"
          },
          {
            "label": "auctionId",
            "offset": 0,
            "slot": "107",
            "type": "t_uint256",
            "contract": "Auction",
            "src": "contracts/oldAuction.sol:31"
          },
          {
            "label": "auctionIdByCardId",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Auction",
            "src": "contracts/oldAuction.sol:32"
          },
          {
            "label": "gasFreeOpCounter",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Auction",
            "src": "contracts/oldAuction.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(MyBet)7738_storage)dyn_storage": {
            "label": "struct Auction.MyBet[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Card)7466": {
            "label": "contract Card",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)7700": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(MyBet)7738_storage)dyn_storage)": {
            "label": "mapping(address => struct Auction.MyBet[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AuctionInfo)7729_storage)": {
            "label": "mapping(uint256 => struct Auction.AuctionInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AuctionInfo)7729_storage": {
            "label": "struct Auction.AuctionInfo",
            "members": [
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "bestBet",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "bestBettor",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(MyBet)7738_storage": {
            "label": "struct Auction.MyBet",
            "members": [
              {
                "label": "cardId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startingPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9a47d6c7f2318c179f6e562288a00ea15df467101639016f5c322a9cff26e081": {
      "address": "0x88b19322a049a3481588471A1665E51C875C2284",
      "txHash": "0xd593cfd4a530a448775795b91eb5ae7578c54fd884386b5713877aa5672c57ee",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "card",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ICard)5317",
            "contract": "Arena",
            "src": "contracts/Arena.sol:65"
          },
          {
            "label": "eventInfos",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(EventInfo)2982_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:66"
          },
          {
            "label": "bets",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_struct(BetInfo)2992_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:67"
          },
          {
            "label": "betsByUser",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:68"
          },
          {
            "label": "rarities",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)5287)dyn_storage))",
            "contract": "Arena",
            "src": "contracts/Arena.sol:69"
          },
          {
            "label": "maintoken",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(MainToken)5443",
            "contract": "Arena",
            "src": "contracts/Arena.sol:70"
          },
          {
            "label": "calls",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_struct(CallInfo)3006_storage)dyn_storage",
            "contract": "Arena",
            "src": "contracts/Arena.sol:72"
          },
          {
            "label": "_betId",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "Arena",
            "src": "contracts/Arena.sol:73"
          },
          {
            "label": "callsByUser",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:74"
          },
          {
            "label": "gasFreeOpCounter",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:75"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_enum(CardRarity)5287)dyn_storage": {
            "label": "enum ICard.CardRarity[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(CallInfo)3006_storage)dyn_storage": {
            "label": "struct Arena.CallInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICard)5317": {
            "label": "contract ICard",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)5443": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)5287": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(MatchResult)5217": {
            "label": "enum IArena.MatchResult",
            "members": [
              "MatchIsInProgress",
              "MatchCancelled",
              "FirstWon",
              "Draw",
              "SecondWon"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)5287)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => enum ICard.CardRarity[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_enum(CardRarity)5287)dyn_storage)": {
            "label": "mapping(uint256 => enum ICard.CardRarity[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BetInfo)2992_storage)": {
            "label": "mapping(uint256 => struct Arena.BetInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(EventInfo)2982_storage)": {
            "label": "mapping(uint256 => struct Arena.EventInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(BetInfo)2992_storage": {
            "label": "struct Arena.BetInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)5217",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cardOwner",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "betId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(CallInfo)3006_storage": {
            "label": "struct Arena.CallInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)5217",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "firstParticipantAddress",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "firstParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "secondParticipantAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "secondParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(EventInfo)2982_storage": {
            "label": "struct Arena.EventInfo",
            "members": [
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "descriptionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "result",
                "type": "t_enum(MatchResult)5217",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e872d5b58688a84d740ef880d62d96e4b3c6f42859b942ec2f1d23772ae60965": {
      "address": "0x26d7E7f0C245b6879f8b6667b4accE90F3993ECC",
      "txHash": "0x87bcf8420f402b17c7c3f1091fd7a9517e5c323a7c08e1ed1d749649207c2c16",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_arenaAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IArena)6210",
            "contract": "Card",
            "src": "contracts/Card.sol:25"
          },
          {
            "label": "_lastMint",
            "offset": 0,
            "slot": "252",
            "type": "t_struct(Counter)3160_storage",
            "contract": "Card",
            "src": "contracts/Card.sol:26"
          },
          {
            "label": "_acceptedCurrency",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IERC20Upgradeable)1267",
            "contract": "Card",
            "src": "contracts/Card.sol:27"
          },
          {
            "label": "_prices",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_enum(CardRarity)6221,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:28"
          },
          {
            "label": "_upgradePrices",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_enum(CardRarity)6221,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:29"
          },
          {
            "label": "_rarities",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_enum(CardRarity)6221)",
            "contract": "Card",
            "src": "contracts/Card.sol:30"
          },
          {
            "label": "_mintAllowances",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_enum(CardRarity)6221)",
            "contract": "Card",
            "src": "contracts/Card.sol:31"
          },
          {
            "label": "_livesRemaining",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:40"
          },
          {
            "label": "_lastBetsPerformance",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:51"
          },
          {
            "label": "_maintoken",
            "offset": 0,
            "slot": "260",
            "type": "t_contract(MainToken)6377",
            "contract": "Card",
            "src": "contracts/Card.sol:52"
          },
          {
            "label": "_auctionAddress",
            "offset": 0,
            "slot": "261",
            "type": "t_address",
            "contract": "Card",
            "src": "contracts/Card.sol:53"
          },
          {
            "label": "_cardInfos",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_struct(CardInfo)4446_storage)",
            "contract": "Card",
            "src": "contracts/Card.sol:60"
          },
          {
            "label": "_freeMintNonce",
            "offset": 0,
            "slot": "263",
            "type": "t_uint256",
            "contract": "Card",
            "src": "contracts/Card.sol:61"
          },
          {
            "label": "gasFreeOpCounter",
            "offset": 0,
            "slot": "264",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:62"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IArena)6210": {
            "label": "contract IArena",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1267": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)6377": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)6221": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_enum(CardRarity)6221)": {
            "label": "mapping(address => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(CardRarity)6221,t_uint256)": {
            "label": "mapping(enum ICard.CardRarity => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(CardRarity)6221)": {
            "label": "mapping(uint256 => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CardInfo)4446_storage)": {
            "label": "mapping(uint256 => struct Card.CardInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CardInfo)4446_storage": {
            "label": "struct Card.CardInfo",
            "members": [
              {
                "label": "recoveriesDone",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "frozenUntil",
                "type": "t_uint64",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3160_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "462c3e6ab09e930d36cb93c4fd84e89a43655c9dc52542c47e2a7f657e6ce23e": {
      "address": "0x353d20691430e5E04e39df325BeD5462D2B39404",
      "txHash": "0xaeb21ecf41e9bfee038121f3e077b64c2eb2f4dac0a0abc9e3880ff2f3edfd00",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "card",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ICard)11392",
            "contract": "Arena",
            "src": "contracts/Arena.sol:65"
          },
          {
            "label": "eventInfos",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(EventInfo)5993_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:66"
          },
          {
            "label": "bets",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_struct(BetInfo)6003_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:67"
          },
          {
            "label": "betsByUser",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:68"
          },
          {
            "label": "rarities",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)11351)dyn_storage))",
            "contract": "Arena",
            "src": "contracts/Arena.sol:69"
          },
          {
            "label": "maintoken",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(MainToken)11893",
            "contract": "Arena",
            "src": "contracts/Arena.sol:70"
          },
          {
            "label": "calls",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_struct(CallInfo)6017_storage)dyn_storage",
            "contract": "Arena",
            "src": "contracts/Arena.sol:72"
          },
          {
            "label": "_betId",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "Arena",
            "src": "contracts/Arena.sol:73"
          },
          {
            "label": "callsByUser",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:74"
          },
          {
            "label": "gasFreeOpCounter",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:75"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_enum(CardRarity)11351)dyn_storage": {
            "label": "enum ICard.CardRarity[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(CallInfo)6017_storage)dyn_storage": {
            "label": "struct Arena.CallInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICard)11392": {
            "label": "contract ICard",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)11893": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)11351": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(MatchResult)11281": {
            "label": "enum IArena.MatchResult",
            "members": [
              "MatchIsInProgress",
              "MatchCancelled",
              "FirstWon",
              "Draw",
              "SecondWon"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)11351)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => enum ICard.CardRarity[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_enum(CardRarity)11351)dyn_storage)": {
            "label": "mapping(uint256 => enum ICard.CardRarity[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BetInfo)6003_storage)": {
            "label": "mapping(uint256 => struct Arena.BetInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(EventInfo)5993_storage)": {
            "label": "mapping(uint256 => struct Arena.EventInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(BetInfo)6003_storage": {
            "label": "struct Arena.BetInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)11281",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cardOwner",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "betId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(CallInfo)6017_storage": {
            "label": "struct Arena.CallInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)11281",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "firstParticipantAddress",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "firstParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "secondParticipantAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "secondParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(EventInfo)5993_storage": {
            "label": "struct Arena.EventInfo",
            "members": [
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "descriptionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "result",
                "type": "t_enum(MatchResult)11281",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2f03d3e9d0af3797813b7483b0501b9e82f7e688277e76e644e48fcbe4e6e01d": {
      "address": "0xb3fE23B654418713EDD4b5d58b85130f22Fd7e01",
      "txHash": "0x152d55c1619c1dc7eca3cefa3a4aa21a9796e1a2d89dff68ba6db2dbe613e4f1",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)188_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_arenaAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(IArena)9051",
            "contract": "Card",
            "src": "contracts/Card.sol:25"
          },
          {
            "label": "_lastMint",
            "offset": 0,
            "slot": "252",
            "type": "t_struct(Counter)3446_storage",
            "contract": "Card",
            "src": "contracts/Card.sol:26"
          },
          {
            "label": "_acceptedCurrency",
            "offset": 0,
            "slot": "253",
            "type": "t_contract(IERC20Upgradeable)1553",
            "contract": "Card",
            "src": "contracts/Card.sol:27"
          },
          {
            "label": "_prices",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_enum(CardRarity)9062,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:28"
          },
          {
            "label": "_upgradePrices",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_enum(CardRarity)9062,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:29"
          },
          {
            "label": "_rarities",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_uint256,t_enum(CardRarity)9062)",
            "contract": "Card",
            "src": "contracts/Card.sol:30"
          },
          {
            "label": "_mintAllowances",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_enum(CardRarity)9062)",
            "contract": "Card",
            "src": "contracts/Card.sol:31"
          },
          {
            "label": "_livesRemaining",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:40"
          },
          {
            "label": "_lastBetsPerformance",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:51"
          },
          {
            "label": "_maintoken",
            "offset": 0,
            "slot": "260",
            "type": "t_contract(MainToken)9593",
            "contract": "Card",
            "src": "contracts/Card.sol:52"
          },
          {
            "label": "_auctionAddress",
            "offset": 0,
            "slot": "261",
            "type": "t_address",
            "contract": "Card",
            "src": "contracts/Card.sol:53"
          },
          {
            "label": "_cardInfos",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_uint256,t_struct(CardInfo)7280_storage)",
            "contract": "Card",
            "src": "contracts/Card.sol:60"
          },
          {
            "label": "_freeMintNonce",
            "offset": 0,
            "slot": "263",
            "type": "t_uint256",
            "contract": "Card",
            "src": "contracts/Card.sol:61"
          },
          {
            "label": "gasFreeOpCounter",
            "offset": 0,
            "slot": "264",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Card",
            "src": "contracts/Card.sol:62"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IArena)9051": {
            "label": "contract IArena",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)1553": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)9593": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)9062": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_enum(CardRarity)9062)": {
            "label": "mapping(address => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)188_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_enum(CardRarity)9062,t_uint256)": {
            "label": "mapping(enum ICard.CardRarity => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_enum(CardRarity)9062)": {
            "label": "mapping(uint256 => enum ICard.CardRarity)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(CardInfo)7280_storage)": {
            "label": "mapping(uint256 => struct Card.CardInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(CardInfo)7280_storage": {
            "label": "struct Card.CardInfo",
            "members": [
              {
                "label": "recoveriesDone",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "frozenUntil",
                "type": "t_uint64",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3446_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)188_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5df3afd4282c4f2ea1242c822326b44a73be4e5df0905be7e19b74876eadb6c4": {
      "address": "0x2DB5d203a3E3eD526A5F09Bd2144c817041A6B64",
      "txHash": "0x1ce821887b9851913dcec1c5ec8030132da078efd7bb0a54b052b8cdd3642a5f",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_token",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IERC20Upgradeable)661",
            "contract": "Tournament",
            "src": "contracts/Tournament.sol:13"
          },
          {
            "label": "_card",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(ICard)2251",
            "contract": "Tournament",
            "src": "contracts/Tournament.sol:14"
          },
          {
            "label": "_torunamentInfos",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_struct(TournamentInfo)2280_storage)",
            "contract": "Tournament",
            "src": "contracts/Tournament.sol:23"
          },
          {
            "label": "_registeredPlayers",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "contract": "Tournament",
            "src": "contracts/Tournament.sol:24"
          },
          {
            "label": "_gasFreeOpCounter",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Tournament",
            "src": "contracts/Tournament.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICard)2251": {
            "label": "contract ICard",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Upgradeable)661": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)2210": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TournamentInfo)2280_storage)": {
            "label": "mapping(uint256 => struct Tournament.TournamentInfo)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(TournamentInfo)2280_storage": {
            "label": "struct Tournament.TournamentInfo",
            "members": [
              {
                "label": "participationFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isInitialized",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minRequiredRarity",
                "type": "t_enum(CardRarity)2210",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "rewardsCollected",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "65a3dd4c6b73459ffea4ecf9ba8cbef9e1a8b1c93179cfd712fe9f2858bf6403": {
      "address": "0xB2F982aDbB44d2E404A9F5a473F6Ef902856c248",
      "txHash": "0x4d3139c3b91421969292137fb62005ee5f201d90182888eb41a87e00077d7b4b",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "card",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(ICard)5418",
            "contract": "Arena",
            "src": "contracts/Arena.sol:68"
          },
          {
            "label": "eventInfos",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(EventInfo)2982_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:69"
          },
          {
            "label": "bets",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_struct(BetInfo)2992_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:70"
          },
          {
            "label": "betsByUser",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:71"
          },
          {
            "label": "rarities",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)5377)dyn_storage))",
            "contract": "Arena",
            "src": "contracts/Arena.sol:72"
          },
          {
            "label": "maintoken",
            "offset": 0,
            "slot": "106",
            "type": "t_contract(MainToken)5544",
            "contract": "Arena",
            "src": "contracts/Arena.sol:73"
          },
          {
            "label": "calls",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_struct(CallInfo)3006_storage)dyn_storage",
            "contract": "Arena",
            "src": "contracts/Arena.sol:75"
          },
          {
            "label": "_betId",
            "offset": 0,
            "slot": "108",
            "type": "t_uint256",
            "contract": "Arena",
            "src": "contracts/Arena.sol:76"
          },
          {
            "label": "callsByUser",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:77"
          },
          {
            "label": "gasFreeOpCounter",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Arena",
            "src": "contracts/Arena.sol:78"
          },
          {
            "label": "cardsOnABet",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "Arena",
            "src": "contracts/Arena.sol:79"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_enum(CardRarity)5377)dyn_storage": {
            "label": "enum ICard.CardRarity[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(CallInfo)3006_storage)dyn_storage": {
            "label": "struct Arena.CallInfo[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ICard)5418": {
            "label": "contract ICard",
            "numberOfBytes": "20"
          },
          "t_contract(MainToken)5544": {
            "label": "contract MainToken",
            "numberOfBytes": "20"
          },
          "t_enum(CardRarity)5377": {
            "label": "enum ICard.CardRarity",
            "members": [
              "Common",
              "Rare",
              "Epic",
              "Legendary",
              "Mythic"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(MatchResult)5307": {
            "label": "enum IArena.MatchResult",
            "members": [
              "MatchIsInProgress",
              "MatchCancelled",
              "FirstWon",
              "Draw",
              "SecondWon"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_enum(CardRarity)5377)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => enum ICard.CardRarity[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_enum(CardRarity)5377)dyn_storage)": {
            "label": "mapping(uint256 => enum ICard.CardRarity[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(BetInfo)2992_storage)": {
            "label": "mapping(uint256 => struct Arena.BetInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(EventInfo)2982_storage)": {
            "label": "mapping(uint256 => struct Arena.EventInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(BetInfo)2992_storage": {
            "label": "struct Arena.BetInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)5307",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cardOwner",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "betId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(CallInfo)3006_storage": {
            "label": "struct Arena.CallInfo",
            "members": [
              {
                "label": "eventId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "choice",
                "type": "t_enum(MatchResult)5307",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "firstParticipantAddress",
                "type": "t_address",
                "offset": 1,
                "slot": "1"
              },
              {
                "label": "firstParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "secondParticipantAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "secondParticipantCard",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(EventInfo)2982_storage": {
            "label": "struct Arena.EventInfo",
            "members": [
              {
                "label": "betsAcceptedUntilTs",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "descriptionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "result",
                "type": "t_enum(MatchResult)5307",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
